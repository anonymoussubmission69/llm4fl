{
    "bug_id": 10,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.language.CaverphoneTest.testEndMb",
    "test_body": "public void testEndMb() throws EncoderException {\nString[][] data = {{\"mb\", \"M111111111\"}, {\"mbmb\", \"MPM1111111\"}};\nthis.checkEncodings(data);\n}\n",
    "stack_trace": "junit.framework.ComparisonFailure: Source: mbmb expected:<M[PM]1111111> but was:<M[MP]1111111>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat org.apache.commons.codec.StringEncoderAbstractTest.checkEncoding(StringEncoderAbstractTest.java:38)\nat org.apache.commons.codec.StringEncoderAbstractTest.checkEncodings(StringEncoderAbstractTest.java:43)\nat org.apache.commons.codec.language.CaverphoneTest.testEndMb(CaverphoneTest.java:335)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.language.Caverphone:<init>()V",
            "method_body": "public Caverphone() {\nsuper();\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String caverphone(String txt) {\nif( txt == null || txt.length() == 0 ) {\ntxt = txt.toLowerCase(java.util.Locale.ENGLISH);\ntxt = txt.replaceAll(\"[^a-z]\", \"\");\ntxt = txt.replaceAll(\"e$\", \"\");             // 2.0 only\ntxt = txt.replaceAll(\"^cough\", \"cou2f\");\ntxt = txt.replaceAll(\"^rough\", \"rou2f\");\ntxt = txt.replaceAll(\"^tough\", \"tou2f\");\ntxt = txt.replaceAll(\"^enough\", \"enou2f\");  // 2.0 only\ntxt = txt.replaceAll(\"^trough\", \"trou2f\");  // 2.0 only - note the spec says ^enough here again, c+p error I assume\ntxt = txt.replaceAll(\"^gn\", \"2n\");\ntxt = txt.replaceAll(\"^mb\", \"m2\");\ntxt = txt.replaceAll(\"cq\", \"2q\");\ntxt = txt.replaceAll(\"ci\", \"si\");\ntxt = txt.replaceAll(\"ce\", \"se\");\ntxt = txt.replaceAll(\"cy\", \"sy\");\ntxt = txt.replaceAll(\"tch\", \"2ch\");\ntxt = txt.replaceAll(\"c\", \"k\");\ntxt = txt.replaceAll(\"q\", \"k\");\ntxt = txt.replaceAll(\"x\", \"k\");\ntxt = txt.replaceAll(\"v\", \"f\");\ntxt = txt.replaceAll(\"dg\", \"2g\");\ntxt = txt.replaceAll(\"tio\", \"sio\");\ntxt = txt.replaceAll(\"tia\", \"sia\");\ntxt = txt.replaceAll(\"d\", \"t\");\ntxt = txt.replaceAll(\"ph\", \"fh\");\ntxt = txt.replaceAll(\"b\", \"p\");\ntxt = txt.replaceAll(\"sh\", \"s2\");\ntxt = txt.replaceAll(\"z\", \"s\");\ntxt = txt.replaceAll(\"^[aeiou]\", \"A\");\ntxt = txt.replaceAll(\"[aeiou]\", \"3\");\ntxt = txt.replaceAll(\"j\", \"y\");        // 2.0 only\ntxt = txt.replaceAll(\"^y3\", \"Y3\");     // 2.0 only\ntxt = txt.replaceAll(\"^y\", \"A\");       // 2.0 only\ntxt = txt.replaceAll(\"y\", \"3\");        // 2.0 only\ntxt = txt.replaceAll(\"3gh3\", \"3kh3\");\ntxt = txt.replaceAll(\"gh\", \"22\");\ntxt = txt.replaceAll(\"g\", \"k\");\ntxt = txt.replaceAll(\"s+\", \"S\");\ntxt = txt.replaceAll(\"t+\", \"T\");\ntxt = txt.replaceAll(\"p+\", \"P\");\ntxt = txt.replaceAll(\"k+\", \"K\");\ntxt = txt.replaceAll(\"f+\", \"F\");\ntxt = txt.replaceAll(\"m+\", \"M\");\ntxt = txt.replaceAll(\"n+\", \"N\");\ntxt = txt.replaceAll(\"w3\", \"W3\");\ntxt = txt.replaceAll(\"wh3\", \"Wh3\");\ntxt = txt.replaceAll(\"w$\", \"3\");       // 2.0 only\ntxt = txt.replaceAll(\"w\", \"2\");\ntxt = txt.replaceAll(\"^h\", \"A\");\ntxt = txt.replaceAll(\"h\", \"2\");\ntxt = txt.replaceAll(\"r3\", \"R3\");\ntxt = txt.replaceAll(\"r$\", \"3\");       // 2.0 only\ntxt = txt.replaceAll(\"r\", \"2\");\ntxt = txt.replaceAll(\"l3\", \"L3\");\ntxt = txt.replaceAll(\"l$\", \"3\");       // 2.0 only\ntxt = txt.replaceAll(\"l\", \"2\");\ntxt = txt.replaceAll(\"2\", \"\");\ntxt = txt.replaceAll(\"3$\", \"A\");       // 2.0 only\ntxt = txt.replaceAll(\"3\", \"\");\ntxt = txt + \"111111\" + \"1111\";        // 1.0 only has 6 1s\nreturn txt.substring(0, 10);          // 1.0 truncates to 6\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.codec.language.Caverphone:encode(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String encode(String pString) {\nreturn caverphone(pString);\n}",
            "method_id": 2
        }
    ]
}