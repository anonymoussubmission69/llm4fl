{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "org.apache.commons.codec.language.MetaphoneTest.testLocaleIndependence",
    "test_body": "public void testLocaleIndependence() throws Exception {StringEncoder encoder = makeEncoder();String[] data = { \"I\", \"i\", };Locale orig = Locale.getDefault();Locale[] locales = { Locale.ENGLISH, new Locale(\"tr\"), Locale.getDefault() };try {for (int i = 0; i < data.length; i++) {String ref = null;for (int j = 0; j < locales.length; j++) {Locale.setDefault(locales[j]);if (j <= 0) {ref = encoder.encode(data[i]);} else {String cur = null;try {cur = encoder.encode(data[i]);} catch (Exception e) {fail(Locale.getDefault().toString() + \": \" + e.getMessage());}assertEquals(Locale.getDefault().toString() + \": \", ref, cur);}}}} finally {Locale.setDefault(orig);}}",
    "stack_trace": "junit.framework.ComparisonFailure: tr:  expected:<[I]> but was:<[\u0130]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.TestCase.assertEquals(TestCase.java:261)\nat org.apache.commons.codec.StringEncoderAbstractTest.testLocaleIndependence(StringEncoderAbstractTest.java:91)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.codec.language.Metaphone:encode(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String encode(String pString) {\nreturn metaphone(pString);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String metaphone(String txt) {\nboolean hard = false ;\nif ((txt == null) || (txt.length() == 0)) {\nif (txt.length() == 1) {\nreturn txt.toUpperCase() ;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.codec.language.Metaphone:<init>()V",
            "method_body": "public Metaphone() {\nsuper();\n}",
            "method_id": 2
        }
    ]
}