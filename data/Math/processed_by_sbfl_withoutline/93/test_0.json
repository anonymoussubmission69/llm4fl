{
    "bug_id": 93,
    "test_id": 0,
    "test_name": "org.apache.commons.math.util.MathUtilsTest.testFactorial",
    "test_body": "public void testFactorial() {\nfor (int i = 1; i < 21; i++) {\nassertEquals(i + \"! \", factorial(i), MathUtils.factorial(i));\nassertEquals(i + \"! \", (double)factorial(i), MathUtils.factorialDouble(i), Double.MIN_VALUE);\nassertEquals(i + \"! \", Math.log((double)factorial(i)), MathUtils.factorialLog(i), 10E-12);",
    "stack_trace": "junit.framework.AssertionFailedError: 17!  expected:<3.55687428096E14> but was:<3.55687428096001E14>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:120)\nat junit.framework.TestCase.assertEquals(TestCase.java:279)\nat org.apache.commons.math.util.MathUtilsTest.testFactorial(MathUtilsTest.java:237)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorial(I)J",
            "method_body": "public static long factorial(final int n) {\nlong result = Math.round(factorialDouble(n));\nif (result == Long.MAX_VALUE) {\nreturn factorials[n];\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorialDouble(I)D",
            "method_body": "public static double factorialDouble(final int n) {\nif (n < 0) {\nreturn Math.floor(Math.exp(factorialLog(n)) + 0.5);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.util.MathUtils:factorialLog(I)D",
            "method_body": "public static double factorialLog(final int n) {\nif (n < 0) {\ndouble logSum = 0;\nfor (int i = 2; i <= n; i++) {\nlogSum += Math.log((double)i);\nreturn logSum;\n}",
            "method_id": 2
        }
    ]
}