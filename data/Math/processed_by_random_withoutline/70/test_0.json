{
    "bug_id": 70,
    "test_id": 0,
    "test_name": "org.apache.commons.math.analysis.solvers.BisectionSolverTest.testMath369",
    "test_body": "public void testMath369() throws Exception {\nUnivariateRealFunction f = new SinFunction();\nUnivariateRealSolver solver = new BisectionSolver();\nassertEquals(Math.PI, solver.solve(f, 3.0, 3.2, 3.1), solver.getAbsoluteAccuracy());\n}\n",
    "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:88)\nat org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:66)\nat org.apache.commons.math.analysis.solvers.BisectionSolver.solve(BisectionSolver.java:72)\nat org.apache.commons.math.analysis.solvers.BisectionSolverTest.testMath369(BisectionSolverTest.java:101)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DD)D",
            "method_body": "public double solve(final UnivariateRealFunction f, double min, double max)\nclearResult();\nverifyInterval(min,max);\nint i = 0;\nwhile (i < maximalIterationCount) {\nm = UnivariateRealSolverUtils.midpoint(min, max);\nfmin = f.value(min);\nfm = f.value(m);\nif (fm * fmin > 0.0) {\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:clearResult()V",
            "method_body": "protected final void clearResult() {\nthis.iterationCount = 0;\nthis.resultComputed = false;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:verifyInterval(DD)V",
            "method_body": "protected void verifyInterval(final double lower, final double upper) {\nif (lower >= upper) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(DD)D",
            "method_body": "public double solve(double min, double max)\nreturn solve(f, min, max);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BisectionSolver:<init>()V",
            "method_body": "public BisectionSolver() {\nsuper(100, 1E-6);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverImpl:<init>(ID)V",
            "method_body": "protected UnivariateRealSolverImpl(final int defaultMaximalIterationCount,\nsuper(defaultMaximalIterationCount, defaultAbsoluteAccuracy);\nthis.defaultFunctionValueAccuracy = 1.0e-15;\nthis.functionValueAccuracy = defaultFunctionValueAccuracy;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.math.ConvergingAlgorithmImpl:<init>(ID)V",
            "method_body": "protected ConvergingAlgorithmImpl(final int defaultMaximalIterationCount,\nfinal double defaultAbsoluteAccuracy) {\nthis.defaultAbsoluteAccuracy = defaultAbsoluteAccuracy;\nthis.defaultRelativeAccuracy = 1.0e-14;\nthis.absoluteAccuracy = defaultAbsoluteAccuracy;\nthis.relativeAccuracy = defaultRelativeAccuracy;\nthis.defaultMaximalIterationCount = defaultMaximalIterationCount;\nthis.maximalIterationCount = defaultMaximalIterationCount;\nthis.iterationCount = 0;\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.BisectionSolver:solve(Lorg/apache/commons/math/analysis/UnivariateRealFunction;DDD)D",
            "method_body": "public double solve(final UnivariateRealFunction f, double min, double max, double initial)\nreturn solve(min, max);\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.math.analysis.solvers.UnivariateRealSolverUtils:midpoint(DD)D",
            "method_body": "public static double midpoint(double a, double b) {\nreturn (a + b) * .5;\n}",
            "method_id": 8
        }
    ]
}