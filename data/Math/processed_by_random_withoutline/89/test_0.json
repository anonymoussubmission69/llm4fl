{
    "bug_id": 89,
    "test_id": 0,
    "test_name": "org.apache.commons.math.stat.FrequencyTest.testAddNonComparable",
    "test_body": "public void testAddNonComparable(){\ntry {\nf.addValue(new Object()); // This was previously OK\nfail(\"Expected IllegalArgumentException\");",
    "stack_trace": "java.lang.ClassCastException: java.lang.Object cannot be cast to java.lang.Comparable\nat org.apache.commons.math.stat.Frequency.addValue(Frequency.java:110)\nat org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(FrequencyTest.java:195)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:<init>()V",
            "method_body": "public Frequency() {\nfreqTable = new TreeMap();\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.math.stat.Frequency:addValue(Ljava/lang/Object;)V",
            "method_body": "public void addValue(Object v) {\naddValue((Comparable<?>) v);\n}",
            "method_id": 1
        }
    ]
}