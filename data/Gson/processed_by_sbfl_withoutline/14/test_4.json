{
    "bug_id": 14,
    "test_id": 4,
    "test_name": "com.google.gson.internal.bind.RecursiveTypesResolveTest.testSubSupertype",
    "test_body": "public void testSubSupertype() {\nassertEquals($Gson$Types.subtypeOf(Object.class),\n$Gson$Types.subtypeOf($Gson$Types.supertypeOf(Number.class)));",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<?> but was:<? extends ? super java.lang.Number>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:86)\nat junit.framework.TestCase.assertEquals(TestCase.java:253)\nat com.google.gson.internal.bind.RecursiveTypesResolveTest.testSubSupertype(RecursiveTypesResolveTest.java:86)",
    "covered_methods": [
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:supertypeOf(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;",
            "method_body": "public static WildcardType supertypeOf(Type bound) {\nlowerBounds = new Type[] { bound };\nreturn new WildcardTypeImpl(new Type[] { Object.class }, lowerBounds);\n}",
            "method_id": 0
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:typeToString(Ljava/lang/reflect/Type;)Ljava/lang/String;",
            "method_body": "public static String typeToString(Type type) {\nreturn type instanceof Class ? ((Class<?>) type).getName() : type.toString();\n}",
            "method_id": 1
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types$WildcardTypeImpl:<init>([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V",
            "method_body": "public WildcardTypeImpl(Type[] upperBounds, Type[] lowerBounds) {\n}",
            "method_id": 2
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:subtypeOf(Ljava/lang/reflect/Type;)Ljava/lang/reflect/WildcardType;",
            "method_body": "public static WildcardType subtypeOf(Type bound) {\nupperBounds = new Type[] { bound };\nreturn new WildcardTypeImpl(upperBounds, EMPTY_TYPE_ARRAY);\n}",
            "method_id": 3
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:checkNotPrimitive(Ljava/lang/reflect/Type;)V",
            "method_body": "static void checkNotPrimitive(Type type) {\ncheckArgument(!(type instanceof Class<?>) || !((Class<?>) type).isPrimitive());\n}",
            "method_id": 4
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkArgument(Z)V",
            "method_body": "public static void checkArgument(boolean condition) {\nif (!condition) {\n}",
            "method_id": 5
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:equals(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z",
            "method_body": "public static boolean equals(Type a, Type b) {\nif (a == b) {\nreturn true;\n} else if (a instanceof Class) {\nreturn a.equals(b);\n} else if (a instanceof ParameterizedType) {\nif (!(b instanceof ParameterizedType)) {\nParameterizedType pa = (ParameterizedType) a;\nParameterizedType pb = (ParameterizedType) b;\nreturn equal(pa.getOwnerType(), pb.getOwnerType())\n} else if (a instanceof GenericArrayType) {\nif (!(b instanceof GenericArrayType)) {\nreturn false;\nGenericArrayType ga = (GenericArrayType) a;\nGenericArrayType gb = (GenericArrayType) b;\nreturn equals(ga.getGenericComponentType(), gb.getGenericComponentType());\n} else if (a instanceof WildcardType) {\nif (!(b instanceof WildcardType)) {\nWildcardType wa = (WildcardType) a;\nWildcardType wb = (WildcardType) b;\nreturn Arrays.equals(wa.getUpperBounds(), wb.getUpperBounds())\n}",
            "method_id": 6
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Types:<clinit>()V",
            "method_body": "static final Type[] EMPTY_TYPE_ARRAY = new Type[] {};\nstatic final Type[] EMPTY_TYPE_ARRAY = new Type[] {};",
            "method_id": 7
        },
        {
            "method_signature": "com.google.gson.internal.$Gson$Preconditions:checkNotNull(Ljava/lang/Object;)Ljava/lang/Object;",
            "method_body": "public static <T> T checkNotNull(T obj) {\nif (obj == null) {\nreturn obj;\n}",
            "method_id": 8
        }
    ]
}