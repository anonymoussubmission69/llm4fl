{
    "bug_id": 1,
    "test_id": 0,
    "test_name": "com.fasterxml.jackson.core.json.TestParserNonStandard.testAllowNaN",
    "test_body": "public void testAllowNaN() throws Exception {\n_testAllowNaN(false);\n_testAllowNaN(true);\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: Expected an exception with one of substrings ([can not be represented as BigDecimal]): got one with message \"null\"\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat com.fasterxml.jackson.test.BaseTest.verifyException(BaseTest.java:355)\nat com.fasterxml.jackson.core.json.TestParserNonStandard._testAllowNaN(TestParserNonStandard.java:394)",
    "covered_methods": [
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:<clinit>()V",
            "method_body": "private static final long serialVersionUID = 1L;\npublic final static JsonLocation NA = new JsonLocation(\"N/A\", -1L, -1L, -1, -1);\nthis(srcRef, -1L, totalChars, lineNr, colNr);\n}",
            "method_id": 100
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonLocation:toString()Ljava/lang/String;",
            "method_body": "public String toString()\nStringBuilder sb = new StringBuilder(80);\nsb.append(\"[Source: \");\nif (_sourceRef == null) {\nsb.append(_sourceRef.toString());\nsb.append(\"; line: \");\nsb.append(_lineNr);\nsb.append(\", column: \");\nsb.append(_columnNr);\nsb.append(']');\nreturn sb.toString();\n}",
            "method_id": 101
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:<init>(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;Ljava/lang/Throwable;)V",
            "method_body": "protected JsonProcessingException(String msg, JsonLocation loc, Throwable rootCause)\nsuper(msg);\nif (rootCause != null) {\n_location = loc;\n}",
            "method_id": 102
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:<init>(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;)V",
            "method_body": "protected JsonProcessingException(String msg, JsonLocation loc)\nthis(msg, loc, null);\n}",
            "method_id": 103
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:getLocation()Lcom/fasterxml/jackson/core/JsonLocation;",
            "method_body": "public JsonLocation getLocation() {\nreturn _location;\n}",
            "method_id": 104
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:getMessageSuffix()Ljava/lang/String;",
            "method_body": "protected String getMessageSuffix() {\nreturn null;\n}",
            "method_id": 105
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonProcessingException:getMessage()Ljava/lang/String;",
            "method_body": "public String getMessage()\nString msg = super.getMessage();\nif (msg == null) {\nJsonLocation loc = getLocation();\nString suffix = getMessageSuffix();\nif (loc != null || suffix != null) {\nStringBuilder sb = new StringBuilder(100);\nsb.append(msg);\nif (suffix != null) {\nif (loc != null) {\nsb.append('\\n');\nsb.append(\" at \");\nsb.append(loc.toString());\nmsg = sb.toString();\nreturn msg;\n}",
            "method_id": 106
        },
        {
            "method_signature": "com.fasterxml.jackson.core.JsonParseException:<init>(Ljava/lang/String;Lcom/fasterxml/jackson/core/JsonLocation;)V",
            "method_body": "public JsonParseException(String msg, JsonLocation loc)\nsuper(msg, loc);\n}",
            "method_id": 107
        }
    ]
}