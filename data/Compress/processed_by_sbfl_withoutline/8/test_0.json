{
    "bug_id": 8,
    "test_id": 0,
    "test_name": "org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid",
    "test_body": "61: public void testParseOctalInvalid() throws Exception{\n62: byte [] buffer;\n63: buffer=new byte[0]; // empty byte array\n64: try {\n65: TarUtils.parseOctal(buffer,0, buffer.length);\n66: fail(\"Expected IllegalArgumentException - should be at least 2 bytes long\");\n67: } catch (IllegalArgumentException expected) {",
    "stack_trace": "junit.framework.AssertionFailedError: Expected IllegalArgumentException - should be at least 2 bytes long\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.TestCase.fail(TestCase.java:227)\nat org.apache.commons.compress.archivers.tar.TarUtilsTest.testParseOctalInvalid(TarUtilsTest.java:66)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.compress.archivers.tar.TarUtils:parseOctal([BII)J",
            "method_body": "public static long parseOctal(final byte[] buffer, final int offset, final int length) {\nlong    result = 0;\nboolean stillPadding = true;\nint     end = offset + length;\nint     start = offset;\nfor (int i = start; i < end; i++){\nreturn result;\n}",
            "method_id": 0
        }
    ]
}