{
    "bug_id": 26,
    "test_id": 1,
    "test_name": "org.apache.commons.compress.utils.IOUtilsTest.skipUsingRead",
    "test_body": "44: public void skipUsingRead() throws Exception {\n45: skip(new StreamWrapper() {\n46: public InputStream wrap(InputStream toWrap) {\n47: return new FilterInputStream(toWrap) {\n48: public long skip(long s) {\n49: return 0;\n50: }\n51: };\n52: }\n53: });\n54: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.compress.utils.IOUtils:skip(Ljava/io/InputStream;J)J",
            "method_body": "public static long skip(InputStream input, long numToSkip) throws IOException {\nlong available = numToSkip;\nwhile (numToSkip > 0) {\nlong skipped = input.skip(numToSkip);\nif (skipped == 0) {\nbreak;\nnumToSkip -= skipped;\n}\nreturn available - numToSkip;\n}",
            "method_id": 0
        }
    ]
}