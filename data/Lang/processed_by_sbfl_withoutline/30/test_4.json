{
    "bug_id": 30,
    "test_id": 4,
    "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars",
    "test_body": "public void testContainsNone_StringWithSupplementaryChars() {\nassertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20000));\nassertEquals(false, StringUtils.containsNone(CharU20000 + CharU20001, CharU20001));\nassertEquals(false, StringUtils.containsNone(CharU20000, CharU20000));\n// Sanity check:\nassertEquals(-1, CharU20000.indexOf(CharU20001));\nassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\nassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n// Test:\nassertEquals(true, StringUtils.containsNone(CharU20000, CharU20001));\nassertEquals(true, StringUtils.containsNone(CharU20001, CharU20000));",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_StringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:381)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
            "method_body": "public static boolean containsNone(CharSequence cs, String invalidChars) {\nif (cs == null || invalidChars == null) {\nreturn containsNone(cs, invalidChars.toCharArray());\n}",
            "method_id": 0
        }
    ]
}