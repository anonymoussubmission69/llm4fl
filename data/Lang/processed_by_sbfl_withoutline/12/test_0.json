{
    "bug_id": 12,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.RandomStringUtilsTest.testExceptions",
    "test_body": "public void testExceptions() {\nfinal char[] DUMMY = new char[]{'a'}; // valid char array\ntry {\nRandomStringUtils.random(-1);\nfail();\n} catch (IllegalArgumentException ex) {}\ntry {\nRandomStringUtils.random(-1, true, true);\nfail();\n} catch (IllegalArgumentException ex) {}\ntry {\nRandomStringUtils.random(-1, DUMMY);\nfail();\n} catch (IllegalArgumentException ex) {}\ntry {\nRandomStringUtils.random(1, new char[0]); // must not provide empty array => IAE\nfail();",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 1171399597\nat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:248)\nat org.apache.commons.lang3.RandomStringUtils.random(RandomStringUtils.java:321)\nat org.apache.commons.lang3.RandomStringUtilsTest.testExceptions(RandomStringUtilsTest.java:148)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ[CLjava/util/Random;)Ljava/lang/String;",
            "method_body": "public static String random(int count, int start, int end, boolean letters, boolean numbers,\nif (count == 0) {\n} else if (count < 0) {\nthrow new IllegalArgumentException(\"Requested random string length \" + count + \" is less than 0.\");\nif (start == 0 && end == 0) {\nif (!letters && !numbers) {\nend = Integer.MAX_VALUE;\nchar[] buffer = new char[count];\nint gap = end - start;\nwhile (count-- != 0) {\nif (chars == null) {\nch = chars[random.nextInt(gap) + start];\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(I[C)Ljava/lang/String;",
            "method_body": "public static String random(int count, char... chars) {\nif (chars == null) {\nreturn random(count, 0, chars.length, false, false, chars, RANDOM);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(I)Ljava/lang/String;",
            "method_body": "public static String random(int count) {\nreturn random(count, false, false);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IZZ)Ljava/lang/String;",
            "method_body": "public static String random(int count, boolean letters, boolean numbers) {\nreturn random(count, 0, 0, letters, numbers);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.RandomStringUtils:random(IIIZZ)Ljava/lang/String;",
            "method_body": "public static String random(int count, int start, int end, boolean letters, boolean numbers) {\nreturn random(count, start, end, letters, numbers, null, RANDOM);\n}",
            "method_id": 4
        }
    ]
}