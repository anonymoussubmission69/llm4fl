{
    "bug_id": 46,
    "tests": [
        {
            "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash",
            "test_body": "public void testEscapeJavaWithSlash() {\nfinal String input = \"String with a slash (/) in it\";\n106: final String expected = input;\nfinal String actual = StringEscapeUtils.escapeJava(input);\n109: /**\n* In 2.4 StringEscapeUtils.escapeJava(String) escapes '/' characters, which are not a valid character to escape\n* in a Java string.\n*/\nassertEquals(expected, actual);\n}\n",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V",
                    "method_body": "private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\nif (out == null) {\nthrow new IllegalArgumentException(\"The Writer must not be null\");\n}\n}\nsz = str.length();\nchar ch = str.charAt(i);\n// handle unicode\nout.write(\"\\\\u00\" + hex(ch));\nout.write('\"');\nbreak;\ncase '\\\\' :\nout.write('\\\\');\nbreak;\n}",
                    "method_id": 0
                },
                {
                    "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJava(Ljava/lang/String;)Ljava/lang/String;",
                    "method_body": "public static String escapeJava(String str) {\ntry{\n}",
                    "method_id": 1
                }
            ],
            "stack_trace": "junit.framework.ComparisonFailure: expected:<...tring with a slash ([]/) in it> but was:<...tring with a slash ([\\]/) in it>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaWithSlash(StringEscapeUtilsTest.java:113)",
            "test_id": 0
        }
    ]
}