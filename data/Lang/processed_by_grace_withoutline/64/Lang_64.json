{
    "bug_id": 64,
    "tests": [
        {
            "test_name": "org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType",
            "test_body": "public void testCompareTo_otherEnumType() {\ntry {\nValuedColorEnum.BLUE.compareTo(ValuedLanguageEnum.ENGLISH);\nfail();\n} catch (ClassCastException ex) {",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum:init(Ljava/lang/String;)V",
                    "method_body": "private void init(String name) {\nif (StringUtils.isEmpty(name)) {\nClass enumClass = getEnumClass();\nif (enumClass == null) {\nClass cls = getClass();\nboolean ok = false;\nwhile (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\nif (cls == enumClass) {\nok = true;\nbreak;\nif (ok == false) {\nEntry entry = (Entry) cEnumClasses.get(enumClass);\nif (entry == null) {\nentry = createEntry(enumClass);\ncEnumClasses.put(enumClass, entry);\nif (entry.map.containsKey(name)) {\nentry.map.put(name, this);\nentry.list.add(this);\n}",
                    "method_id": 0
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.ValuedEnum:<init>(Ljava/lang/String;I)V",
                    "method_body": "protected ValuedEnum(String name, int value) {\nsuper(name);\niValue = value;\n}",
                    "method_id": 1
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum:<init>(Ljava/lang/String;)V",
                    "method_body": "protected Enum(String name) {\nsuper();\ninit(name);\niName = name;\niHashCode = 7 + getEnumClass().hashCode() + 3 * name.hashCode();\n}",
                    "method_id": 2
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum:createEntry(Ljava/lang/Class;)Lorg/apache/commons/lang/enums/Enum$Entry;",
                    "method_body": "private static Entry createEntry(Class enumClass) {\nEntry entry = new Entry();\nClass cls = enumClass.getSuperclass();\nwhile (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\nreturn entry;\n}",
                    "method_id": 3
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum:class$(Ljava/lang/String;)Ljava/lang/Class;",
                    "method_body": "private void init(String name) {\nif (StringUtils.isEmpty(name)) {\nClass enumClass = getEnumClass();\nif (enumClass == null) {\nClass cls = getClass();\nboolean ok = false;\nwhile (cls != null && cls != Enum.class && cls != ValuedEnum.class) {\nif (cls == enumClass) {\nok = true;\nbreak;\nif (ok == false) {\nEntry entry = (Entry) cEnumClasses.get(enumClass);\nif (entry == null) {\nentry = createEntry(enumClass);\ncEnumClasses.put(enumClass, entry);\nif (entry.map.containsKey(name)) {\nentry.map.put(name, this);\nentry.list.add(this);\n}",
                    "method_id": 4
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum:getEnumClass()Ljava/lang/Class;",
                    "method_body": "public Class getEnumClass() {\nreturn getClass();\n}",
                    "method_id": 5
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.ValuedEnum:compareTo(Ljava/lang/Object;)I",
                    "method_body": "public int compareTo(Object other) {\nreturn iValue - ((ValuedEnum) other).iValue;\n}",
                    "method_id": 6
                },
                {
                    "method_signature": "org.apache.commons.lang.enums.Enum$Entry:<init>()V",
                    "method_body": "protected Entry() {\nsuper();\n}",
                    "method_id": 7
                },
                {
                    "method_signature": "org.apache.commons.lang.StringUtils:isEmpty(Ljava/lang/String;)Z",
                    "method_body": "public static boolean isEmpty(String str) {\nreturn str == null || str.length() == 0;\n}",
                    "method_id": 8
                }
            ],
            "stack_trace": "junit.framework.AssertionFailedError\nat junit.framework.Assert.fail(Assert.java:55)\nat junit.framework.Assert.fail(Assert.java:64)\nat junit.framework.TestCase.fail(TestCase.java:235)\nat org.apache.commons.lang.enums.ValuedEnumTest.testCompareTo_otherEnumType(ValuedEnumTest.java:108)",
            "test_id": 0
        }
    ]
}