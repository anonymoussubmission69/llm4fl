{
    "bug_id": 20,
    "tests": [
        {
            "test_name": "org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray",
            "test_body": "public void testJoin_Objectarray() {\n//        assertEquals(null, StringUtils.join(null)); // generates warning\nassertEquals(null, StringUtils.join((Object[]) null)); // equivalent explicit cast\n// test additional varargs calls\nassertEquals(\"\", StringUtils.join()); // empty array\nassertEquals(\"\", StringUtils.join((Object) null)); // => new Object[]{null}\n191: assertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST));\nassertEquals(\"\", StringUtils.join(NULL_ARRAY_LIST));\nassertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST));\nassertEquals(\"abc\", StringUtils.join(new String[] {\"a\", \"b\", \"c\"}));",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;)Ljava/lang/String;",
                    "method_body": "public static <T> String join(T... elements) {\nreturn join(elements, null);\n}",
                    "method_id": 0
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;",
                    "method_body": "public static String join(Object[] array, String separator) {\nif (array == null) {\nreturn null;\nreturn join(array, separator, 0, array.length);\n}",
                    "method_id": 1
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;Ljava/lang/String;II)Ljava/lang/String;",
                    "method_body": "public static String join(Object[] array, String separator, int startIndex, int endIndex) {\nif (array == null) {\nif (separator == null) {\nseparator = EMPTY;\nint noOfItems = (endIndex - startIndex);\nif (noOfItems <= 0) {\nreturn EMPTY;\nStringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + separator.length());\nfor (int i = startIndex; i < endIndex; i++) {\nif (i > startIndex) {\nif (array[i] != null) {\nreturn buf.toString();\n}",
                    "method_id": 2
                }
            ],
            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3383)\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3338)\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3230)\nat org.apache.commons.lang3.StringUtilsTest.testJoin_Objectarray(StringUtilsTest.java:193)",
            "test_id": 0
        },
        {
            "test_name": "org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayChar",
            "test_body": "public void testJoin_ArrayChar() {\nassertEquals(null, StringUtils.join((Object[]) null, ','));\nassertEquals(TEXT_LIST_CHAR, StringUtils.join(ARRAY_LIST, SEPARATOR_CHAR));\nassertEquals(\"\", StringUtils.join(EMPTY_ARRAY_LIST, SEPARATOR_CHAR));\nassertEquals(\";;foo\", StringUtils.join(MIXED_ARRAY_LIST, SEPARATOR_CHAR));\nassertEquals(\"foo;2\", StringUtils.join(MIXED_TYPE_LIST, SEPARATOR_CHAR));\n207: assertEquals(\"/\", StringUtils.join(MIXED_ARRAY_LIST, '/', 0, MIXED_ARRAY_LIST.length-1));\nassertEquals(\"foo\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 1));\nassertEquals(\"null\", StringUtils.join(NULL_TO_STRING_LIST,'/', 0, 1));\nassertEquals(\"foo/2\", StringUtils.join(MIXED_TYPE_LIST, '/', 0, 2));",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;C)Ljava/lang/String;",
                    "method_body": "public static String join(Object[] array, char separator) {\nif (array == null) {\nreturn null;\nreturn join(array, separator, 0, array.length);\n}",
                    "method_id": 3
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:join([Ljava/lang/Object;CII)Ljava/lang/String;",
                    "method_body": "public static String join(Object[] array, char separator, int startIndex, int endIndex) {\nif (array == null) {\nint noOfItems = (endIndex - startIndex);\nif (noOfItems <= 0) {\nreturn EMPTY;\nStringBuilder buf = new StringBuilder((array[startIndex] == null ? 16 : array[startIndex].toString().length()) + 1);\nfor (int i = startIndex; i < endIndex; i++) {\nif (i > startIndex) {\nbuf.append(separator);\nif (array[i] != null) {\nbuf.append(array[i]);\nreturn buf.toString();\n}",
                    "method_id": 4
                }
            ],
            "stack_trace": "java.lang.NullPointerException\nat org.apache.commons.lang3.StringUtils.join(StringUtils.java:3298)\nat org.apache.commons.lang3.StringUtilsTest.testJoin_ArrayChar(StringUtilsTest.java:209)",
            "test_id": 1
        }
    ]
}