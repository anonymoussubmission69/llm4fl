{
    "bug_id": 31,
    "tests": [
        {
            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyStringWithSupplementaryChars",
            "test_body": "public void testContainsAnyStringWithSupplementaryChars() {\nassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000));\nassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001));\nassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000));\n// Sanity check:\nassertEquals(-1, CharU20000.indexOf(CharU20001));\nassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\nassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n// Test:\nassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001));\nassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000));",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                    "method_body": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\nif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\nint csLength = cs.length();\nint searchLength = searchChars.length;\nfor (int i = 0; i < csLength; i++) {\nchar ch = cs.charAt(i);\nfor (int j = 0; j < searchLength; j++) {\nif (searchChars[j] == ch) {\nreturn true;\n}",
                    "method_id": 0
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;Ljava/lang/String;)Z",
                    "method_body": "public static boolean containsAny(CharSequence cs, String searchChars) {\nif (searchChars == null) {\nreturn containsAny(cs, searchChars.toCharArray());\n}",
                    "method_id": 1
                },
                {
                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                    "method_body": "public static boolean isEmpty(char[] array) {\nif (array == null || array.length == 0) {\nreturn false;\n}",
                    "method_id": 2
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                    "method_body": "public static boolean isEmpty(CharSequence cs) {\nreturn cs == null || cs.length() == 0;\n}",
                    "method_id": 3
                }
            ],
            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyStringWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:680)",
            "test_id": 0
        },
        {
            "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyCharArrayWithSupplementaryChars",
            "test_body": "public void testContainsAnyCharArrayWithSupplementaryChars() {\nassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20000.toCharArray()));\nassertEquals(true, StringUtils.containsAny(CharU20000 + CharU20001, CharU20001.toCharArray()));\nassertEquals(true, StringUtils.containsAny(CharU20000, CharU20000.toCharArray()));\n// Sanity check:\nassertEquals(-1, CharU20000.indexOf(CharU20001));\nassertEquals(0, CharU20000.indexOf(CharU20001.charAt(0)));\nassertEquals(-1, CharU20000.indexOf(CharU20001.charAt(1)));\n// Test:\nassertEquals(false, StringUtils.containsAny(CharU20000, CharU20001.toCharArray()));\nassertEquals(false, StringUtils.containsAny(CharU20001, CharU20000.toCharArray()));",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:containsAny(Ljava/lang/CharSequence;[C)Z",
                    "method_body": "public static boolean containsAny(CharSequence cs, char[] searchChars) {\nif (isEmpty(cs) || ArrayUtils.isEmpty(searchChars)) {\nint csLength = cs.length();\nint searchLength = searchChars.length;\nfor (int i = 0; i < csLength; i++) {\nchar ch = cs.charAt(i);\nfor (int j = 0; j < searchLength; j++) {\nif (searchChars[j] == ch) {\nreturn true;\n}",
                    "method_id": 4
                },
                {
                    "method_signature": "org.apache.commons.lang3.ArrayUtils:isEmpty([C)Z",
                    "method_body": "public static boolean isEmpty(char[] array) {\nif (array == null || array.length == 0) {\nreturn false;\n}",
                    "method_id": 5
                },
                {
                    "method_signature": "org.apache.commons.lang3.StringUtils:isEmpty(Ljava/lang/CharSequence;)Z",
                    "method_body": "public static boolean isEmpty(CharSequence cs) {\nreturn cs == null || cs.length() == 0;\n}",
                    "method_id": 6
                }
            ],
            "stack_trace": "junit.framework.AssertionFailedError: expected:<false> but was:<true>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsAnyCharArrayWithSupplementaryChars(StringUtilsEqualsIndexOfTest.java:696)",
            "test_id": 1
        }
    ]
}