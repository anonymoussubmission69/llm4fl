{
    "bug_id": 21,
    "tests": [
        {
            "test_name": "org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal",
            "test_body": "public void testIsSameLocalTime_Cal() {\nGregorianCalendar cal1 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT+1\"));\nGregorianCalendar cal2 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT-1\"));\ncal1.set(2004, 6, 9, 13, 45, 0);\ncal1.set(Calendar.MILLISECOND, 0);\ncal2.set(2004, 6, 9, 13, 45, 0);\ncal2.set(Calendar.MILLISECOND, 0);\nassertEquals(true, DateUtils.isSameLocalTime(cal1, cal2));\n231: Calendar cal3 = Calendar.getInstance();\nCalendar cal4 = Calendar.getInstance();\ncal3.set(2004, 6, 9, 4,  0, 0);\ncal4.set(2004, 6, 9, 16, 0, 0);\ncal3.set(Calendar.MILLISECOND, 0);\ncal4.set(Calendar.MILLISECOND, 0);\nassertFalse(\"LANG-677\", DateUtils.isSameLocalTime(cal3, cal4));\n239: cal2.set(2004, 6, 9, 11, 45, 0);\nassertEquals(false, DateUtils.isSameLocalTime(cal1, cal2));\ntry {\nDateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\nfail();\n} catch (IllegalArgumentException ex) {}\n}\n",
            "covered_methods": [
                {
                    "method_signature": "org.apache.commons.lang3.time.DateUtils:isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z",
                    "method_body": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\nif (cal1 == null || cal2 == null) {\nreturn (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n}",
                    "method_id": 0
                }
            ],
            "stack_trace": "junit.framework.AssertionFailedError: LANG-677\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal(DateUtilsTest.java:237)",
            "test_id": 0
        }
    ]
}