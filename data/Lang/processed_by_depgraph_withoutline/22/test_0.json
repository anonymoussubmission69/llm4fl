{
    "bug_id": 22,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.math.FractionTest.testReduce",
    "test_body": "610: public void testReduce() {\n611: Fraction f = null;\n612: 613: f = Fraction.getFraction(50, 75);\n614: Fraction result = f.reduce();\n615: assertEquals(2, result.getNumerator());\n616: assertEquals(3, result.getDenominator());\n617: 618: f = Fraction.getFraction(-2, -3);\n619: result = f.reduce();\n620: assertEquals(2, result.getNumerator());\n621: assertEquals(3, result.getDenominator());\n622: 623: f = Fraction.getFraction(2, -3);\n624: result = f.reduce();\n625: assertEquals(-2, result.getNumerator());\n626: assertEquals(3, result.getDenominator());\n627: 628: f = Fraction.getFraction(-2, 3);\n629: result = f.reduce();\n630: assertEquals(-2, result.getNumerator());\n631: assertEquals(3, result.getDenominator());\n632: assertSame(f, result);\n633: 634: f = Fraction.getFraction(2, 3);\n635: result = f.reduce();\n636: assertEquals(2, result.getNumerator());\n637: assertEquals(3, result.getDenominator());\n638: assertSame(f, result);\n639: 640: f = Fraction.getFraction(0, 1);\n641: result = f.reduce();\n642: assertEquals(0, result.getNumerator());\n643: assertEquals(1, result.getDenominator());\n644: assertSame(f, result);\n645: 646: f = Fraction.getFraction(0, 100);\n647: result = f.reduce();\n648: assertEquals(0, result.getNumerator());\n649: assertEquals(1, result.getDenominator());\n650: assertSame(result, Fraction.ZERO);\n651: 652: f = Fraction.getFraction(Integer.MIN_VALUE, 2);\n653: result = f.reduce();\n654: assertEquals(Integer.MIN_VALUE / 2, result.getNumerator());\n655: assertEquals(1, result.getDenominator());",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<-1073741824> but was:<-2147483648>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:234)\nat junit.framework.Assert.assertEquals(Assert.java:241)\nat junit.framework.TestCase.assertEquals(TestCase.java:409)\nat org.apache.commons.lang3.math.FractionTest.testReduce(FractionTest.java:654)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:greatestCommonDivisor(II)I",
            "method_body": "private static int greatestCommonDivisor(int u, int v) {\nif (Math.abs(u) <= 1 || Math.abs(v) <= 1) {\nreturn 1;\nif (u>0) { u=-u; } // make u negative\nif (v>0) { v=-v; } // make v negative\nint k=0;\nwhile ((u&1)==0 && (v&1)==0 && k<31) { // while u and v are both even...\nu/=2; v/=2; k++; // cast out twos.\nif (k==31) {\nint t = ((u&1)==1) ? v : -(u/2)/*B3*/;\nwhile ((t&1)==0) { // while t is even..\nt/=2; // cast out twos\nif (t>0) {\nu = -t;\nv = t;\nt = (v - u)/2;\n} while (t!=0);\nreturn -u*(1<<k); // gcd is u*2^k\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:reduce()Lorg/apache/commons/lang3/math/Fraction;",
            "method_body": "public Fraction reduce() {\nif (numerator == 0) {\nreturn equals(ZERO) ? this : ZERO;\nint gcd = greatestCommonDivisor(Math.abs(numerator), denominator);\nif (gcd == 1) {\nreturn this;\nreturn Fraction.getFraction(numerator / gcd, denominator / gcd);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(Object obj) {\nif (obj == this) {\nif (obj instanceof Fraction == false) {\nFraction other = (Fraction) obj;\nreturn (getNumerator() == other.getNumerator() &&\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:getFraction(II)Lorg/apache/commons/lang3/math/Fraction;",
            "method_body": "public static Fraction getFraction(int numerator, int denominator) {\nif (denominator == 0) {\nif (denominator < 0) {\nif (numerator==Integer.MIN_VALUE ||\nnumerator = -numerator;\ndenominator = -denominator;\nreturn new Fraction(numerator, denominator);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:<init>(II)V",
            "method_body": "private static final long serialVersionUID = 65382027393090L;\nprivate transient int hashCode = 0;\nprivate transient String toString = null;\nprivate transient String toProperString = null;\nsuper();\nthis.numerator = numerator;\nthis.denominator = denominator;\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:getNumerator()I",
            "method_body": "public int getNumerator() {\nreturn numerator;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.lang3.math.Fraction:getDenominator()I",
            "method_body": "public int getDenominator() {\nreturn denominator;\n}",
            "method_id": 6
        }
    ]
}