{
    "bug_id": 30,
    "test_id": 8,
    "test_name": "org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars",
    "test_body": "304: public void testContainsNone_CharArrayWithBadSupplementaryChars() {\n305: // Test edge case: 1/2 of a (broken) supplementary char\n306: assertEquals(true, StringUtils.containsNone(CharUSuppCharHigh, CharU20001.toCharArray()));\n307: assertEquals(-1, CharUSuppCharLow.indexOf(CharU20001));\n308: assertEquals(true, StringUtils.containsNone(CharUSuppCharLow, CharU20001.toCharArray()));\n309: assertEquals(-1, CharU20001.indexOf(CharUSuppCharHigh));",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<true> but was:<false>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotEquals(Assert.java:329)\nat junit.framework.Assert.assertEquals(Assert.java:78)\nat junit.framework.Assert.assertEquals(Assert.java:174)\nat junit.framework.Assert.assertEquals(Assert.java:181)\nat junit.framework.TestCase.assertEquals(TestCase.java:341)\nat org.apache.commons.lang3.StringUtilsEqualsIndexOfTest.testContainsNone_CharArrayWithBadSupplementaryChars(StringUtilsEqualsIndexOfTest.java:308)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.StringUtils:containsNone(Ljava/lang/CharSequence;[C)Z",
            "method_body": "public static boolean containsNone(CharSequence cs, char[] searchChars) {\nif (cs == null || searchChars == null) {\nint csLen = cs.length();\nint searchLen = searchChars.length;\nfor (int i = 0; i < csLen; i++) {\nchar ch = cs.charAt(i);\nfor (int j = 0; j < searchLen; j++) {\nif (searchChars[j] == ch) {\nreturn false;\nreturn true;\n}",
            "method_id": 0
        }
    ]
}