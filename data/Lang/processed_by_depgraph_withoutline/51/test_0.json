{
    "bug_id": 51,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.BooleanUtilsTest.test_toBoolean_String",
    "test_body": "295: public void test_toBoolean_String() {\n296: assertEquals(false, BooleanUtils.toBoolean((String) null));\n297: assertEquals(false, BooleanUtils.toBoolean(\"\"));\n298: assertEquals(false, BooleanUtils.toBoolean(\"off\"));\n299: assertEquals(false, BooleanUtils.toBoolean(\"oof\"));\n300: assertEquals(false, BooleanUtils.toBoolean(\"yep\"));\n301: assertEquals(false, BooleanUtils.toBoolean(\"trux\"));\n302: assertEquals(false, BooleanUtils.toBoolean(\"false\"));\n303: assertEquals(false, BooleanUtils.toBoolean(\"a\"));\n304: assertEquals(true, BooleanUtils.toBoolean(\"true\")); // interned handled differently\n305: assertEquals(true, BooleanUtils.toBoolean(new StringBuffer(\"tr\").append(\"ue\").toString()));\n306: assertEquals(true, BooleanUtils.toBoolean(\"truE\"));\n307: assertEquals(true, BooleanUtils.toBoolean(\"trUe\"));\n308: assertEquals(true, BooleanUtils.toBoolean(\"trUE\"));\n309: assertEquals(true, BooleanUtils.toBoolean(\"tRue\"));\n310: assertEquals(true, BooleanUtils.toBoolean(\"tRuE\"));\n311: assertEquals(true, BooleanUtils.toBoolean(\"tRUe\"));\n312: assertEquals(true, BooleanUtils.toBoolean(\"tRUE\"));\n313: assertEquals(true, BooleanUtils.toBoolean(\"TRUE\"));\n314: assertEquals(true, BooleanUtils.toBoolean(\"TRUe\"));\n315: assertEquals(true, BooleanUtils.toBoolean(\"TRuE\"));\n316: assertEquals(true, BooleanUtils.toBoolean(\"TRue\"));\n317: assertEquals(true, BooleanUtils.toBoolean(\"TrUE\"));\n318: assertEquals(true, BooleanUtils.toBoolean(\"TrUe\"));\n319: assertEquals(true, BooleanUtils.toBoolean(\"TruE\"));\n320: assertEquals(true, BooleanUtils.toBoolean(\"True\"));\n321: assertEquals(true, BooleanUtils.toBoolean(\"on\"));\n322: assertEquals(true, BooleanUtils.toBoolean(\"oN\"));\n323: assertEquals(true, BooleanUtils.toBoolean(\"On\"));\n324: assertEquals(true, BooleanUtils.toBoolean(\"ON\"));\n325: assertEquals(true, BooleanUtils.toBoolean(\"yes\"));\n326: assertEquals(true, BooleanUtils.toBoolean(\"yeS\"));\n327: assertEquals(true, BooleanUtils.toBoolean(\"yEs\"));\n328: assertEquals(true, BooleanUtils.toBoolean(\"yES\"));\n329: assertEquals(true, BooleanUtils.toBoolean(\"Yes\"));\n330: assertEquals(true, BooleanUtils.toBoolean(\"YeS\"));\n331: assertEquals(true, BooleanUtils.toBoolean(\"YEs\"));\n332: assertEquals(true, BooleanUtils.toBoolean(\"YES\"));\n333: assertEquals(false, BooleanUtils.toBoolean(\"yes?\"));\n334: assertEquals(false, BooleanUtils.toBoolean(\"tru\"));\n335: }\n",
    "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 3\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang.BooleanUtils.toBoolean(BooleanUtils.java:686)\nat org.apache.commons.lang.BooleanUtilsTest.test_toBoolean_String(BooleanUtilsTest.java:334)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.BooleanUtils:toBoolean(Ljava/lang/String;)Z",
            "method_body": "public static boolean toBoolean(String str) {\nif (str == \"true\") {\nreturn true;\nif (str == null) {\nreturn false;\nswitch (str.length()) {\nchar ch0 = str.charAt(0);\nchar ch1 = str.charAt(1);\nreturn\nchar ch = str.charAt(0);\nif (ch == 'y') {\nreturn\nif (ch == 'Y') {\nreturn\nchar ch = str.charAt(0);\nif (ch == 't') {\nreturn\nif (ch == 'T') {\nreturn\nreturn false;\n}",
            "method_id": 0
        }
    ]
}