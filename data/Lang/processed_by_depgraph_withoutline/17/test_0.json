{
    "bug_id": 17,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.StringEscapeUtilsTest.testLang720",
    "test_body": "428: public void testLang720() {\n429: String input = new StringBuilder(\"\\ud842\\udfb7\").append(\"A\").toString();\n430: String escaped = StringEscapeUtils.escapeXml(input);\n431: assertEquals(input, escaped);\n432: }\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<\ud842\udfb7[A]> but was:<\ud842\udfb7[?]>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang3.StringEscapeUtilsTest.testLang720(StringEscapeUtilsTest.java:431)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;Ljava/io/Writer;)V",
            "method_body": "public final void translate(CharSequence input, Writer out) throws IOException {\nif (out == null) {\nif (input == null) {\nint pos = 0;\nint len = Character.codePointCount(input, 0, input.length());\nwhile (pos < len) {\nint consumed = translate(input, pos, out);\nif (consumed == 0) {\nchar[] c = Character.toChars(Character.codePointAt(input, pos));\nout.write(c);\n}\npos++;\n}\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang3.text.translate.CharSequenceTranslator:translate(Ljava/lang/CharSequence;)Ljava/lang/String;",
            "method_body": "public abstract int translate(CharSequence input, int index, Writer out) throws IOException;\nif (input == null) {\nStringWriter writer = new StringWriter(input.length() * 2);\ntranslate(input, writer);\nreturn writer.toString();\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang3.StringEscapeUtils:escapeXml(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public static final String escapeXml(String input) {\nreturn ESCAPE_XML.translate(input);\n}",
            "method_id": 2
        }
    ]
}