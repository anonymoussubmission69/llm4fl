{
    "bug_id": 41,
    "test_id": 1,
    "test_name": "org.apache.commons.lang.ClassUtilsTest.test_getPackageName_Class",
    "test_body": "140: public void test_getPackageName_Class() {\n141: assertEquals(\"java.lang\", ClassUtils.getPackageName(String.class));\n142: assertEquals(\"java.util\", ClassUtils.getPackageName(Map.Entry.class));\n143: assertEquals(\"\", ClassUtils.getPackageName((Class)null));\n144: 145: // LANG-535\n146: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[].class));\n147: 148: // Primitive Arrays\n149: assertEquals(\"\", ClassUtils.getPackageName(boolean[].class));\n150: assertEquals(\"\", ClassUtils.getPackageName(byte[].class));\n151: assertEquals(\"\", ClassUtils.getPackageName(char[].class));\n152: assertEquals(\"\", ClassUtils.getPackageName(short[].class));\n153: assertEquals(\"\", ClassUtils.getPackageName(int[].class));\n154: assertEquals(\"\", ClassUtils.getPackageName(long[].class));\n155: assertEquals(\"\", ClassUtils.getPackageName(float[].class));\n156: assertEquals(\"\", ClassUtils.getPackageName(double[].class));\n157: 158: // Arrays of arrays of ...\n159: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][].class));\n160: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][].class));\n161: assertEquals(\"java.lang\", ClassUtils.getPackageName(String[][][][].class));\n162: }\n",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<[]java.lang> but was:<[[L]java.lang>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.ClassUtilsTest.test_getPackageName_Class(ClassUtilsTest.java:146)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.ClassUtils:getPackageName(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public static String getPackageName(String className) {\nif (className == null) {\nint i = className.lastIndexOf(PACKAGE_SEPARATOR_CHAR);\nif (i == -1) {\nreturn className.substring(0, i);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.ClassUtils:getPackageName(Ljava/lang/Class;)Ljava/lang/String;",
            "method_body": "public static String getPackageName(Class<?> cls) {\nif (cls == null) {\nreturn StringUtils.EMPTY;\nreturn getPackageName(cls.getName());\n}",
            "method_id": 1
        }
    ]
}