{
    "bug_id": 52,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript",
    "test_body": "169: public void testEscapeJavaScript() {\n170: assertEquals(null, StringEscapeUtils.escapeJavaScript(null));\n171: try {\n172: StringEscapeUtils.escapeJavaScript(null, null);\n173: fail();\n174: } catch (IOException ex) {\n175: fail();\n176: } catch (IllegalArgumentException ex) {\n177: }\n178: try {\n179: StringEscapeUtils.escapeJavaScript(null, \"\");\n180: fail();\n181: } catch (IOException ex) {\n182: fail();\n183: } catch (IllegalArgumentException ex) {\n184: }\n185: 186: assertEquals(\"He didn\\\\'t say, \\\\\\\"stop!\\\\\\\"\", StringEscapeUtils.escapeJavaScript(\"He didn't say, \\\"stop!\\\"\"));\n187: assertEquals(\"document.getElementById(\\\\\\\"test\\\\\\\").value = \\\\'<script>alert(\\\\'aaa\\\\');<\\\\/script>\\\\';\", \n188: StringEscapeUtils.escapeJavaScript(\"document.getElementById(\\\"test\\\").value = '<script>alert('aaa');</script>';\"));",
    "stack_trace": "junit.framework.ComparisonFailure: expected:<...ipt>alert(\\'aaa\\');<[\\]/script>\\';> but was:<...ipt>alert(\\'aaa\\');<[]/script>\\';>\nat junit.framework.Assert.assertEquals(Assert.java:100)\nat junit.framework.Assert.assertEquals(Assert.java:107)\nat junit.framework.TestCase.assertEquals(TestCase.java:269)\nat org.apache.commons.lang.StringEscapeUtilsTest.testEscapeJavaScript(StringEscapeUtilsTest.java:187)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/io/Writer;Ljava/lang/String;Z)V",
            "method_body": "private static void escapeJavaStyleString(Writer out, String str, boolean escapeSingleQuote) throws IOException {\nif (out == null) {\nthrow new IllegalArgumentException(\"The Writer must not be null\");\nif (str == null) {\nsz = str.length();\nfor (int i = 0; i < sz; i++) {\nchar ch = str.charAt(i);\nif (ch > 0xfff) {\n} else if (ch > 0xff) {\n} else if (ch > 0x7f) {\n} else if (ch < 32) {\nswitch (ch) {\nif (escapeSingleQuote) {\nout.write('\\\\');\nout.write('\\'');\nbreak;\nout.write('\\\\');\nout.write('\"');\nbreak;\nout.write(ch);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/io/Writer;Ljava/lang/String;)V",
            "method_body": "public static void escapeJavaScript(Writer out, String str) throws IOException {\nescapeJavaStyleString(out, str, true);\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaStyleString(Ljava/lang/String;Z)Ljava/lang/String;",
            "method_body": "private static String escapeJavaStyleString(String str, boolean escapeSingleQuotes) {\nif (str == null) {\nreturn null;\nStringWriter writer = new StringWriter(str.length() * 2);\nescapeJavaStyleString(writer, str, escapeSingleQuotes);\nreturn writer.toString();\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.lang.StringEscapeUtils:escapeJavaScript(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public static String escapeJavaScript(String str) {\nreturn escapeJavaStyleString(str, true);\n}",
            "method_id": 3
        }
    ]
}