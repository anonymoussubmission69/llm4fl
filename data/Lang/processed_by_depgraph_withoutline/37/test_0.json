{
    "bug_id": 37,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.ArrayUtilsAddTest.testJira567",
    "test_body": "32: public void testJira567(){\n33: Number[] n;\n34: // Valid array construction\n35: n = ArrayUtils.addAll(new Number[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});\n36: assertEquals(2,n.length);\n37: assertEquals(Number.class,n.getClass().getComponentType());\n38: try {\n39: // Invalid - can't store Long in Integer array\n40: n = ArrayUtils.addAll(new Integer[]{Integer.valueOf(1)}, new Long[]{Long.valueOf(2)});\n41: fail(\"Should have generated IllegalArgumentException\");",
    "stack_trace": "java.lang.ArrayStoreException\nat java.lang.System.arraycopy(Native Method)\nat org.apache.commons.lang3.ArrayUtils.addAll(ArrayUtils.java:2962)\nat org.apache.commons.lang3.ArrayUtilsAddTest.testJira567(ArrayUtilsAddTest.java:40)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.ArrayUtils:addAll([Ljava/lang/Object;[Ljava/lang/Object;)[Ljava/lang/Object;",
            "method_body": "public static <T> T[] addAll(T[] array1, T... array2) {\nif (array1 == null) {\n} else if (array2 == null) {\nfinal Class<?> type1 = array1.getClass().getComponentType();\nT[] joinedArray = (T[]) Array.newInstance(type1, array1.length + array2.length);\nSystem.arraycopy(array1, 0, joinedArray, 0, array1.length);\nSystem.arraycopy(array2, 0, joinedArray, array1.length, array2.length);\nreturn joinedArray;\n}",
            "method_id": 0
        }
    ]
}