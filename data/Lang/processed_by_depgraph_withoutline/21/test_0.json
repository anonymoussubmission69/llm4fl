{
    "bug_id": 21,
    "test_id": 0,
    "test_name": "org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal",
    "test_body": "222: public void testIsSameLocalTime_Cal() {\n223: GregorianCalendar cal1 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT+1\"));\n224: GregorianCalendar cal2 = new GregorianCalendar(TimeZone.getTimeZone(\"GMT-1\"));\n225: cal1.set(2004, 6, 9, 13, 45, 0);\n226: cal1.set(Calendar.MILLISECOND, 0);\n227: cal2.set(2004, 6, 9, 13, 45, 0);\n228: cal2.set(Calendar.MILLISECOND, 0);\n229: assertEquals(true, DateUtils.isSameLocalTime(cal1, cal2));\n230: 231: Calendar cal3 = Calendar.getInstance();\n232: Calendar cal4 = Calendar.getInstance();\n233: cal3.set(2004, 6, 9, 4,  0, 0);\n234: cal4.set(2004, 6, 9, 16, 0, 0);\n235: cal3.set(Calendar.MILLISECOND, 0);\n236: cal4.set(Calendar.MILLISECOND, 0);\n237: assertFalse(\"LANG-677\", DateUtils.isSameLocalTime(cal3, cal4));\n238: 239: cal2.set(2004, 6, 9, 11, 45, 0);\n240: assertEquals(false, DateUtils.isSameLocalTime(cal1, cal2));\n241: try {\n242: DateUtils.isSameLocalTime((Calendar) null, (Calendar) null);\n243: fail();\n244: } catch (IllegalArgumentException ex) {}\n245: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: LANG-677\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.assertTrue(Assert.java:22)\nat junit.framework.Assert.assertFalse(Assert.java:39)\nat junit.framework.TestCase.assertFalse(TestCase.java:210)\nat org.apache.commons.lang3.time.DateUtilsTest.testIsSameLocalTime_Cal(DateUtilsTest.java:237)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang3.time.DateUtils:isSameLocalTime(Ljava/util/Calendar;Ljava/util/Calendar;)Z",
            "method_body": "public static boolean isSameLocalTime(Calendar cal1, Calendar cal2) {\nif (cal1 == null || cal2 == null) {\nreturn (cal1.get(Calendar.MILLISECOND) == cal2.get(Calendar.MILLISECOND) &&\n}",
            "method_id": 0
        }
    ]
}