{
    "bug_id": 44,
    "test_id": 0,
    "test_name": "org.apache.commons.lang.NumberUtilsTest.testLang457",
    "test_body": "524: public void testLang457() {\n525: String[] badInputs = new String[] { \"l\", \"L\", \"f\", \"F\", \"junk\", \"bobL\"};\n526: for(int i=0; i<badInputs.length; i++) {\n527: try {\n528: NumberUtils.createNumber(badInputs[i]);\n529: fail(\"NumberFormatException was expected for \" + badInputs[i]);",
    "stack_trace": "java.lang.StringIndexOutOfBoundsException: String index out of range: 0\nat java.lang.String.charAt(String.java:658)\nat org.apache.commons.lang.NumberUtils.createNumber(NumberUtils.java:193)\nat org.apache.commons.lang.NumberUtilsTest.testLang457(NumberUtilsTest.java:528)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.lang.NumberUtils:createNumber(Ljava/lang/String;)Ljava/lang/Number;",
            "method_body": "public static Number createNumber(String val) throws NumberFormatException {\nif (val == null) {\nif (val.length() == 0) {\nif (val.startsWith(\"--\")) {\nif (val.startsWith(\"0x\") || val.startsWith(\"-0x\")) {\nchar lastChar = val.charAt(val.length() - 1);\nint decPos = val.indexOf('.');\nint expPos = val.indexOf('e') + val.indexOf('E') + 1;\nif (decPos > -1) {\nif (expPos > -1) {\nmant = val;\ndec = null;\nif (!Character.isDigit(lastChar)) {\nif (expPos > -1 && expPos < val.length() - 1) {\nexp = null;\nString numeric = val.substring(0, val.length() - 1);\nboolean allZeros = isAllZeros(mant) && isAllZeros(exp);\nswitch (lastChar) {\nif (dec == null\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.lang.NumberUtils:isAllZeros(Ljava/lang/String;)Z",
            "method_body": "private static boolean isAllZeros(String s) {\nif (s == null) {\nfor (int i = s.length() - 1; i >= 0; i--) {\nif (s.charAt(i) != '0') {\nreturn false;\n}",
            "method_id": 1
        }
    ]
}