{
    "bug_id": 28,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.EntitiesTest.noSpuriousDecodes",
    "test_body": "63: @Test public void noSpuriousDecodes() {\n64: String string = \"http://www.foo.com?a=1&num_rooms=1&children=0&int=VA&b=2\";\n65: assertEquals(string, Entities.unescape(string));\n66: }\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<...tp://www.foo.com?a=1[&num_rooms=1&children=0&int]=VA&b=2> but was:<...tp://www.foo.com?a=1[#_rooms=1&children=0\u222b]=VA&b=2>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.nodes.EntitiesTest.noSpuriousDecodes(EntitiesTest.java:65)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Entities:unescape(Ljava/lang/String;Z)Ljava/lang/String;",
            "method_body": "static String unescape(String string, boolean strict) {\nif (!string.contains(\"&\"))\nMatcher m = strict? strictUnescapePattern.matcher(string) : unescapePattern.matcher(string);\nStringBuffer accum = new StringBuffer(string.length());\nwhile (m.find()) {\nint charval = -1;\nString num = m.group(3);\nif (num != null) {\nint base = m.group(2) != null ? 16 : 10;\ncharval = Integer.valueOf(num, base);\n}\nString name = m.group(1);\nif (full.containsKey(name))\ncharval = full.get(name);\nif (charval != -1 || charval > 0xFFFF) {\nString c = Character.toString((char) charval);\nm.appendReplacement(accum, Matcher.quoteReplacement(c));\n} else {\nm.appendReplacement(accum, Matcher.quoteReplacement(m.group(0)));\n}\nm.appendTail(accum);\nreturn accum.toString();\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.jsoup.nodes.Entities:loadEntities(Ljava/lang/String;)Ljava/util/Map;",
            "method_body": "private static Map<String, Character> loadEntities(String filename) {\nProperties properties = new Properties();\nMap<String, Character> entities = new HashMap<String, Character>();\nInputStream in = Entities.class.getResourceAsStream(filename);\nproperties.load(in);\nin.close();\n}\nfor (Map.Entry entry: properties.entrySet()) {\nCharacter val = Character.valueOf((char) Integer.parseInt((String) entry.getValue(), 16));\nString name = (String) entry.getKey();\nentities.put(name, val);\n}\nreturn entities;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.jsoup.nodes.Entities:unescape(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String unescape(String string) {\nreturn unescape(string, false);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.jsoup.nodes.Entities:toCharacterKey(Ljava/util/Map;)Ljava/util/Map;",
            "method_body": "private static Map<Character, String> toCharacterKey(Map<String, Character> inMap) {\nMap<Character, String> outMap = new HashMap<Character, String>();\nfor (Map.Entry<String, Character> entry: inMap.entrySet()) {\nCharacter character = entry.getValue();\nString name = entry.getKey();\nif (outMap.containsKey(character)) {\nif (name.toLowerCase().equals(name))\noutMap.put(character, name);\noutMap.put(character, name);\n}\nreturn outMap;\n}",
            "method_id": 3
        }
    ]
}