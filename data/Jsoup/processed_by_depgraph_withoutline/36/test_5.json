{
    "bug_id": 36,
    "test_id": 5,
    "test_name": "org.jsoup.helper.DataUtilTest.shouldNotThrowExceptionOnEmptyCharset",
    "test_body": "39: public void shouldNotThrowExceptionOnEmptyCharset() {\n40: assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html; charset=\"));\n41: assertEquals(null, DataUtil.getCharsetFromContentType(\"text/html; charset=;\"));",
    "stack_trace": "java.nio.charset.IllegalCharsetNameException:\nat java.nio.charset.Charset.checkName(Charset.java:303)\nat java.nio.charset.Charset.lookup2(Charset.java:484)\nat java.nio.charset.Charset.lookup(Charset.java:464)\nat java.nio.charset.Charset.isSupported(Charset.java:505)\nat org.jsoup.helper.DataUtil.getCharsetFromContentType(DataUtil.java:161)\nat org.jsoup.helper.DataUtilTest.shouldNotThrowExceptionOnEmptyCharset(DataUtilTest.java:40)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.helper.DataUtil:getCharsetFromContentType(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "static String getCharsetFromContentType(String contentType) {\nif (contentType == null) return null;\nMatcher m = charsetPattern.matcher(contentType);\nif (m.find()) {\nString charset = m.group(1).trim();\nif (Charset.isSupported(charset)) return charset;\ncharset = charset.toUpperCase(Locale.ENGLISH);\nif (Charset.isSupported(charset)) return charset;\nreturn null;\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.jsoup.helper.DataUtil:<clinit>()V",
            "method_body": "private static final Pattern charsetPattern = Pattern.compile(\"(?i)\\\\bcharset=\\\\s*\\\"?([^\\\\s;\\\"]*)\");\nprivate DataUtil() {}",
            "method_id": 1
        }
    ]
}