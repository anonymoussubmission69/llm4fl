{
    "bug_id": 4,
    "test_id": 0,
    "test_name": "org.jsoup.nodes.EntitiesTest.escape",
    "test_body": "11: @Test public void escape() {\n12: String text = \"Hello &<> \u00c3\u0085 \u00c3\u00a5 \u00cf\u0080 \u00e6\u0096\u00b0 there\";\n13: String escapedAscii = Entities.escape(text, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.base);\n14: String escapedAsciiFull = Entities.escape(text, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.extended);\n15: String escapedUtf = Entities.escape(text, Charset.forName(\"UTF-8\").newEncoder(), Entities.EscapeMode.base);\n16: 17: assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; &#960; &#26032; there\", escapedAscii);\n18: assertEquals(\"Hello &amp;&lt;&gt; &angst; &aring; &pi; &#26032; there\", escapedAsciiFull);\n19: assertEquals(\"Hello &amp;&lt;&gt; &Aring; &aring; \u00cf\u0080 \u00e6\u0096\u00b0 there\", escapedUtf);\n20: // odd that it's defined as aring in base but angst in full\n21: }\n",
    "stack_trace": "",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Entities:escape(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Lorg/jsoup/nodes/Entities$EscapeMode;)Ljava/lang/String;",
            "method_body": "static String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {\nStringBuilder accum = new StringBuilder(string.length() * 2);\nMap<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;\nfor (int pos = 0; pos < string.length(); pos++) {\nCharacter c = string.charAt(pos);\nif (map.containsKey(c))\naccum.append('&').append(map.get(c)).append(';');\nelse if (encoder.canEncode(c))\naccum.append(c.charValue());\naccum.append(\"&#\").append((int) c).append(';');\nreturn accum.toString();\n}",
            "method_id": 0
        }
    ]
}