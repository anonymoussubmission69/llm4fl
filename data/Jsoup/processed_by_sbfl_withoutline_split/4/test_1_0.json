{
    "bug_id": 4,
    "test_id": 1,
    "test_name": "org.jsoup.nodes.EntitiesTest.caseSensitive",
    "test_body": "@Test public void caseSensitive() {\nString unescaped = \"\u00c3\u009c \u00c3\u00bc & &\";\nassertEquals(\"&Uuml; &uuml; &amp; &amp;\", Entities.escape(unescaped, Charset.forName(\"ascii\").newEncoder(), Entities.EscapeMode.extended));\n34: String escaped = \"&Uuml; &uuml; &amp; &AMP\";\nassertEquals(\"\u00c3\u009c \u00c3\u00bc & &\", Entities.unescape(escaped));\n}\n",
    "stack_trace": "junit.framework.AssertionFailedError: expected:<&[U]uml; &uuml; &amp; &a...> but was:<&[u]uml; &uuml; &amp; &a...>\nat org.junit.Assert.assertEquals(Assert.java:115)\nat org.junit.Assert.assertEquals(Assert.java:144)\nat org.jsoup.nodes.EntitiesTest.caseSensitive(EntitiesTest.java:32)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.nodes.Entities:escape(Ljava/lang/String;Ljava/nio/charset/CharsetEncoder;Lorg/jsoup/nodes/Entities$EscapeMode;)Ljava/lang/String;",
            "method_body": "static String escape(String string, CharsetEncoder encoder, EscapeMode escapeMode) {\nStringBuilder accum = new StringBuilder(string.length() * 2);\nMap<Character, String> map = escapeMode == EscapeMode.extended ? fullByVal : baseByVal;\nfor (int pos = 0; pos < string.length(); pos++) {\nCharacter c = string.charAt(pos);\nif (map.containsKey(c))\naccum.append('&').append(map.get(c)).append(';');\nelse if (encoder.canEncode(c))\naccum.append(c.charValue());\naccum.append(\"&#\").append((int) c).append(';');\nreturn accum.toString();\n}",
            "method_id": 0
        }
    ]
}