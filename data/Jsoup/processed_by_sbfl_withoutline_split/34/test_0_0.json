{
    "bug_id": 34,
    "test_id": 0,
    "test_name": "org.jsoup.parser.CharacterReaderTest.nextIndexOfUnmatched",
    "test_body": "@Test public void nextIndexOfUnmatched() {\nCharacterReader r = new CharacterReader(\"<[[one]]\");\nassertEquals(-1, r.nextIndexOf(\"]]>\"));\n}\n",
    "stack_trace": "java.lang.ArrayIndexOutOfBoundsException: 8\nat org.jsoup.parser.CharacterReader.nextIndexOf(CharacterReader.java:92)\nat org.jsoup.parser.CharacterReaderTest.nextIndexOfUnmatched(CharacterReaderTest.java:100)",
    "covered_methods": [
        {
            "method_signature": "org.jsoup.helper.Validate:notNull(Ljava/lang/Object;)V",
            "method_body": "public static void notNull(Object obj) {\nif (obj == null)\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:<init>(Ljava/lang/String;)V",
            "method_body": "CharacterReader(String input) {\nValidate.notNull(input);\nthis.input = input.toCharArray();\nthis.length = this.input.length;\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.jsoup.parser.CharacterReader:nextIndexOf(Ljava/lang/CharSequence;)I",
            "method_body": "int nextIndexOf(CharSequence seq) {\nchar startChar = seq.charAt(0);\nfor (int offset = pos; offset < length; offset++) {\nif (startChar != input[offset])\nwhile(++offset < length && startChar != input[offset]);\nint i = offset + 1;\nint last = i + seq.length()-1;\nif (offset < length) {\nfor (int j = 1; i < last && seq.charAt(j) == input[i]; i++, j++);\n}",
            "method_id": 2
        }
    ]
}