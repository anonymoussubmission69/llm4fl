{
    "bug_id": 16,
    "test_id": 2,
    "test_name": "org.apache.commons.cli2.commandline.WriteableCommandLineImplTest.testGetOptions_Order",
    "test_body": null,
    "stack_trace": "junit.framework.AssertionFailedError: expected same:<[--help (-?,-h)|login <username>] [<target1> [<target2> ...]]> was not:<[--help (-?,-h)]>\nat junit.framework.Assert.fail(Assert.java:57)\nat junit.framework.Assert.failNotSame(Assert.java:325)\nat junit.framework.Assert.assertSame(Assert.java:288)\nat junit.framework.Assert.assertSame(Assert.java:296)\nat junit.framework.TestCase.assertSame(TestCase.java:465)\nat org.apache.commons.cli2.CommandLineTestCase.testGetOptions_Order(CommandLineTestCase.java:436)",
    "covered_methods": [
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>()V",
            "method_body": "public HelpFormatter() {\nthis(DEFAULT_GUTTER_LEFT, DEFAULT_GUTTER_CENTER, DEFAULT_GUTTER_RIGHT, DEFAULT_FULL_WIDTH);\n}",
            "method_id": 0
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V",
            "method_body": "public HelpFormatter(final String gutterLeft,\nfinal int fullWidth) {\nthis.gutterLeft = (gutterLeft == null) ? DEFAULT_GUTTER_LEFT : gutterLeft;\nthis.gutterCenter = (gutterCenter == null) ? DEFAULT_GUTTER_CENTER : gutterCenter;\nthis.gutterRight = (gutterRight == null) ? DEFAULT_GUTTER_RIGHT : gutterRight;\nthis.pageWidth = fullWidth - this.gutterLeft.length() - this.gutterRight.length();\nint availableWidth = fullWidth - pageWidth + this.gutterCenter.length();\nif (availableWidth < 2) {\n}",
            "method_id": 1
        },
        {
            "method_signature": "org.apache.commons.cli2.util.HelpFormatter:<clinit>()V",
            "method_body": "public static final int DEFAULT_FULL_WIDTH = 80;\nfinal Set fullUsage = new HashSet(DisplaySetting.ALL);\nfullUsage.remove(DisplaySetting.DISPLAY_ALIASES);\nfullUsage.remove(DisplaySetting.DISPLAY_GROUP_NAME);\nDEFAULT_FULL_USAGE_SETTINGS = Collections.unmodifiableSet(fullUsage);\nfinal Set lineUsage = new HashSet();\nlineUsage.add(DisplaySetting.DISPLAY_ALIASES);\nlineUsage.add(DisplaySetting.DISPLAY_GROUP_NAME);\nlineUsage.add(DisplaySetting.DISPLAY_PARENT_ARGUMENT);\nDEFAULT_LINE_USAGE_SETTINGS = Collections.unmodifiableSet(lineUsage);\nfinal Set displayUsage = new HashSet(DisplaySetting.ALL);\ndisplayUsage.remove(DisplaySetting.DISPLAY_PARENT_ARGUMENT);\nDEFAULT_DISPLAY_USAGE_SETTINGS = Collections.unmodifiableSet(displayUsage);\n}",
            "method_id": 2
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<init>(Ljava/lang/String;)V",
            "method_body": "private DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 3
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:<clinit>()V",
            "method_body": "private static final Set all = new HashSet();\npublic static final Set ALL = Collections.unmodifiableSet(all);\npublic static final Set NONE = Collections.EMPTY_SET;\npublic static final DisplaySetting DISPLAY_ALIASES =\npublic static final DisplaySetting DISPLAY_OPTIONAL =\npublic static final DisplaySetting DISPLAY_PROPERTY_OPTION =\npublic static final DisplaySetting DISPLAY_SWITCH_ENABLED =\npublic static final DisplaySetting DISPLAY_SWITCH_DISABLED =\npublic static final DisplaySetting DISPLAY_GROUP_NAME =\npublic static final DisplaySetting DISPLAY_GROUP_EXPANDED =\npublic static final DisplaySetting DISPLAY_GROUP_ARGUMENT =\npublic static final DisplaySetting DISPLAY_GROUP_OUTER =\npublic static final DisplaySetting DISPLAY_ARGUMENT_NUMBERED =\npublic static final DisplaySetting DISPLAY_ARGUMENT_BRACKETED =\npublic static final DisplaySetting DISPLAY_PARENT_ARGUMENT =\npublic static final DisplaySetting DISPLAY_PARENT_CHILDREN =\nprivate DisplaySetting(final String name) {\nthis.name = name;\nthis.hashCode = name.hashCode();\nall.add(this);\n}",
            "method_id": 4
        },
        {
            "method_signature": "org.apache.commons.cli2.DisplaySetting:hashCode()I",
            "method_body": "public int hashCode() {\nreturn hashCode;\n}",
            "method_id": 5
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:<init>()V",
            "method_body": "public DefaultOptionBuilder() {\nthis(DefaultOption.DEFAULT_SHORT_PREFIX, DefaultOption.DEFAULT_LONG_PREFIX,\n}",
            "method_id": 6
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:<init>(Ljava/lang/String;Ljava/lang/String;Z)V",
            "method_body": "public DefaultOptionBuilder(final String shortPrefix,\nthrows IllegalArgumentException {\nif ((shortPrefix == null) || (shortPrefix.length() == 0)) {\nif ((longPrefix == null) || (longPrefix.length() == 0)) {\nthis.shortPrefix = shortPrefix;\nthis.longPrefix = longPrefix;\nthis.burstEnabled = burstEnabled;\nreset();\n}",
            "method_id": 7
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:create()Lorg/apache/commons/cli2/option/DefaultOption;",
            "method_body": "public DefaultOption create()\nif (preferredName == null) {\nfinal DefaultOption option =\nreset();\nreturn option;\n}",
            "method_id": 8
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:reset()Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder reset() {\npreferredName = null;\ndescription = null;\naliases = new HashSet();\nburstAliases = new HashSet();\nrequired = false;\nargument = null;\nchildren = null;\nid = 0;\nreturn this;\n}",
            "method_id": 9
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.DefaultOptionBuilder:withLongName(Ljava/lang/String;)Lorg/apache/commons/cli2/builder/DefaultOptionBuilder;",
            "method_body": "public DefaultOptionBuilder withLongName(final String longName) {\nfinal String name = longPrefix + longName;\nif (preferredName == null) {\npreferredName = name;\naliases.add(name);\nreturn this;\n}",
            "method_id": 10
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:<init>(IZ)V",
            "method_body": "public OptionImpl(final int id,\nfinal boolean required) {\nthis.id = id;\nthis.required = required;\n}",
            "method_id": 11
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nif (arguments.hasNext()) {\nfinal String argument = (String) arguments.next();\narguments.previous();\nreturn canProcess(commandLine, argument);\nreturn false;\n}",
            "method_id": 12
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:toString()Ljava/lang/String;",
            "method_body": "public String toString() {\nfinal StringBuffer buffer = new StringBuffer();\nappendUsage(buffer, DisplaySetting.ALL, null);\nreturn buffer.toString();\n}",
            "method_id": 13
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:getId()I",
            "method_body": "public int getId() {\nreturn id;\n}",
            "method_id": 14
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:equals(Ljava/lang/Object;)Z",
            "method_body": "public boolean equals(final Object thatObj) {\nif (thatObj instanceof OptionImpl) {\nfinal OptionImpl that = (OptionImpl) thatObj;\nreturn (getId() == that.getId()) &&\n}",
            "method_id": 15
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:hashCode()I",
            "method_body": "public int hashCode() {\nint hashCode = getId();\nif (getPreferredName() != null) {\nhashCode = (hashCode * 37) + getPreferredName().hashCode();\nif (getDescription() != null) {\nhashCode = (hashCode * 37) + getDescription().hashCode();\nhashCode = (hashCode * 37) + getPrefixes().hashCode();\nhashCode = (hashCode * 37) + getTriggers().hashCode();\nreturn hashCode;\n}",
            "method_id": 16
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:isRequired()Z",
            "method_body": "public boolean isRequired() {\nreturn required;\n}",
            "method_id": 17
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\n}",
            "method_id": 18
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefixes(Ljava/util/Set;)V",
            "method_body": "protected void checkPrefixes(final Set prefixes) {\nif (prefixes.isEmpty()) {\ncheckPrefix(prefixes, getPreferredName());\nthis.getTriggers();\nfor (final Iterator i = getTriggers().iterator(); i.hasNext();) {\ncheckPrefix(prefixes, (String) i.next());\n}",
            "method_id": 19
        },
        {
            "method_signature": "org.apache.commons.cli2.option.OptionImpl:checkPrefix(Ljava/util/Set;Ljava/lang/String;)V",
            "method_body": "private void checkPrefix(final Set prefixes,\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nString prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn;\n}\n}",
            "method_id": 20
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:<init>(Lorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;Ljava/lang/String;IZ)V",
            "method_body": "protected ParentImpl(final Argument argument,\nsuper(id, required);\nthis.children = children;\nthis.argument = argument;\nthis.description = description;\n}",
            "method_id": 21
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(final WriteableCommandLine commandLine,\nif (argument != null) {\nhandleInitialSeparator(arguments, argument.getInitialSeparator());\nprocessParent(commandLine, arguments);\nif (argument != null) {\nargument.processValues(commandLine, arguments, this);\nif ((children != null) && children.canProcess(commandLine, arguments)) {\n}",
            "method_id": 22
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nfinal Set triggers = getTriggers();\nif (argument != null) {\nfinal char separator = argument.getInitialSeparator();\nif (separator != NUL) {\nreturn triggers.contains(arg);\n}",
            "method_id": 23
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn (children == null) ? Collections.EMPTY_SET : children.getPrefixes();\n}",
            "method_id": 24
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (commandLine.hasOption(this)) {\nif (argument != null) {\nargument.validate(commandLine, this);\nif (children != null) {\n}",
            "method_id": 25
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean displayArgument =\nfinal boolean displayChildren =\nif (displayArgument) {\nbuffer.append(' ');\nargument.appendUsage(buffer, helpSettings, comp);\nif (displayChildren) {\n}",
            "method_id": 26
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 27
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:handleInitialSeparator(Ljava/util/ListIterator;C)V",
            "method_body": "private void handleInitialSeparator(final ListIterator arguments,\nfinal String newArgument = (String) arguments.next();\nfinal int initialIndex = newArgument.indexOf(separator);\nif (initialIndex > 0) {\narguments.previous();\n}",
            "method_id": 28
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ParentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nif (argument != null) {\nargument.defaultValues(commandLine, this);\nif (children != null) {\n}",
            "method_id": 29
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:<init>(Ljava/lang/String;Ljava/lang/String;ZLjava/lang/String;Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public DefaultOption(final String shortPrefix,\nsuper(argument, children, description, id, required);\nthis.shortPrefix = shortPrefix;\nthis.burstEnabled = burstEnabled;\nthis.burstLength = shortPrefix.length() + 1;\nthis.preferredName = preferredName;\nthis.aliases =\nthis.burstAliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nnewTriggers.addAll(this.burstAliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\nfinal Set newPrefixes = new HashSet(super.getPrefixes());\nnewPrefixes.add(shortPrefix);\nnewPrefixes.add(longPrefix);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\ncheckPrefixes(newPrefixes);\n}",
            "method_id": 30
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:processParent(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void processParent(WriteableCommandLine commandLine,\nfinal String argument = (String) arguments.next();\nif (triggers.contains(argument)) {\ncommandLine.addOption(this);\narguments.set(preferredName);\n}",
            "method_id": 31
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn triggers;\n}",
            "method_id": 32
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 33
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (isRequired() && !commandLine.hasOption(this)) {\nsuper.validate(commandLine);\n}",
            "method_id": 34
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean optional =\nfinal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);\nif (optional) {\nbuffer.append('[');\nbuffer.append(preferredName);\nif (displayAliases && !aliases.isEmpty()) {\nbuffer.append(\" (\");\nfinal List list = new ArrayList(aliases);\nCollections.sort(list);\nfor (final Iterator i = list.iterator(); i.hasNext();) {\nfinal String alias = (String) i.next();\nbuffer.append(alias);\nif (i.hasNext()) {\nbuffer.append(',');\n}\nbuffer.append(')');\nsuper.appendUsage(buffer, helpSettings, comp);\nif (optional) {\nbuffer.append(']');\n}",
            "method_id": 35
        },
        {
            "method_signature": "org.apache.commons.cli2.option.DefaultOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 36
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:<init>()V",
            "method_body": "private ResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (bundleName == null) {\nbundleName = DEFAULT_BUNDLE;\nthis.prop = bundleName;\nint firstUnderscore = bundleName.indexOf('_');\nint secondUnderscore = bundleName.indexOf('_', firstUnderscore + 1);\nif (firstUnderscore != -1) {\nString language = bundleName.substring(firstUnderscore + 1, secondUnderscore);\nString country = bundleName.substring(secondUnderscore + 1);\nlocale = new Locale(language, country);\n}\nbundle = ResourceBundle.getBundle(bundleName, locale);\n}\n}",
            "method_id": 37
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getBundleName()Ljava/lang/String;",
            "method_body": "public String getBundleName() {\nreturn this.prop;\n}",
            "method_id": 38
        },
        {
            "method_signature": "org.apache.commons.cli2.resource.ResourceHelper:getResourceHelper()Lorg/apache/commons/cli2/resource/ResourceHelper;",
            "method_body": "public static ResourceHelper getResourceHelper() {\nString bundleName = System.getProperty(PROP_LOCALE);\nif (helper == null || !helper.getBundleName().equals(bundleName)) {\nhelper = new ResourceHelper();\nreturn helper;\n}",
            "method_id": 39
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:<init>(Ljava/lang/String;Ljava/lang/String;IICCLorg/apache/commons/cli2/validation/Validator;Ljava/lang/String;Ljava/util/List;I)V",
            "method_body": "public ArgumentImpl(final String name,\nsuper(id, false);\nthis.name = (name == null) ? \"arg\" : name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.initialSeparator = initialSeparator;\nthis.subsequentSeparator = subsequentSeparator;\nthis.subsequentSplit = subsequentSeparator != NUL;\nthis.validator = validator;\nthis.consumeRemaining = consumeRemaining;\nthis.defaultValues = valueDefaults;\nif (minimum > maximum) {\nif ((valueDefaults != null) && (valueDefaults.size() > 0)) {\n}",
            "method_id": 40
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn name;\n}",
            "method_id": 41
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nreturn true;\n}",
            "method_id": 42
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn Collections.EMPTY_SET;\n}",
            "method_id": 43
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(WriteableCommandLine commandLine,\nprocessValues(commandLine, args, this);\n}",
            "method_id": 44
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getInitialSeparator()C",
            "method_body": "public char getInitialSeparator() {\nreturn this.initialSeparator;\n}",
            "method_id": 45
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn Collections.EMPTY_SET;\n}",
            "method_id": 46
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine)\nvalidate(commandLine, this);\n}",
            "method_id": 47
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine,\nfinal List values = commandLine.getValues(option);\nif (values.size() < minimum) {\nif (values.size() > maximum) {\nif (validator != null) {\n}",
            "method_id": 48
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean optional = helpSettings.contains(DisplaySetting.DISPLAY_OPTIONAL);\nfinal boolean numbered =\nfinal boolean bracketed = helpSettings.contains(DisplaySetting.DISPLAY_ARGUMENT_BRACKETED);\nfinal int max = (maximum == Integer.MAX_VALUE) ? 2 : maximum;\nint i = 0;\nwhile (i < max) {\nif (i > 0) {\nbuffer.append(' ');\nif ((i >= minimum) && (optional || (i > 0))) {\nbuffer.append('[');\nif (bracketed) {\nbuffer.append('<');\nbuffer.append(name);\n++i;\nif (numbered) {\nbuffer.append(i);\nif (bracketed) {\nbuffer.append('>');\nif (maximum == Integer.MAX_VALUE) {\nbuffer.append(\" ...\");\nwhile (i > 0) {\n--i;\nif ((i >= minimum) && (optional || (i > 0))) {\nbuffer.append(']');\n}",
            "method_id": 49
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 50
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:stripBoundaryQuotes(Ljava/lang/String;)Ljava/lang/String;",
            "method_body": "public String stripBoundaryQuotes(String token) {\nif (!token.startsWith(\"\\\"\") || !token.endsWith(\"\\\"\")) {\nreturn token;\n}",
            "method_id": 51
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\ndefaultValues(commandLine, this);\n}",
            "method_id": 52
        },
        {
            "method_signature": "org.apache.commons.cli2.option.ArgumentImpl:defaultValues(Lorg/apache/commons/cli2/WriteableCommandLine;Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void defaultValues(final WriteableCommandLine commandLine,\ncommandLine.setDefaultValues(option, defaultValues);\n}",
            "method_id": 53
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:<init>()V",
            "method_body": "public GroupBuilder() {\nreset();\n}",
            "method_id": 54
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:create()Lorg/apache/commons/cli2/Group;",
            "method_body": "public Group create() {\nfinal GroupImpl group =\nreset();\nreturn group;\n}",
            "method_id": 55
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:reset()Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder reset() {\nname = null;\ndescription = null;\noptions = new ArrayList();\nminimum = 0;\nmaximum = Integer.MAX_VALUE;\nreturn this;\n}",
            "method_id": 56
        },
        {
            "method_signature": "org.apache.commons.cli2.builder.GroupBuilder:withOption(Lorg/apache/commons/cli2/Option;)Lorg/apache/commons/cli2/builder/GroupBuilder;",
            "method_body": "public GroupBuilder withOption(final Option option) {\nthis.options.add(option);\nreturn this;\n}",
            "method_id": 57
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:<init>(Ljava/util/List;Ljava/lang/String;Ljava/lang/String;II)V",
            "method_body": "public GroupImpl(final List options,\nsuper(0, false);\nthis.name = name;\nthis.description = description;\nthis.minimum = minimum;\nthis.maximum = maximum;\nthis.options = Collections.unmodifiableList(options);\nfinal List newAnonymous = new ArrayList();\nfinal SortedMap newOptionMap = new TreeMap(ReverseStringComparator.getInstance());\nfinal Set newPrefixes = new HashSet();\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\nif (option instanceof Argument) {\ni.remove();\nnewAnonymous.add(option);\nfinal Set triggers = option.getTriggers();\nfor (Iterator j = triggers.iterator(); j.hasNext();) {\nnewOptionMap.put(j.next(), option);\nnewPrefixes.addAll(option.getPrefixes());\n}\nthis.anonymous = Collections.unmodifiableList(newAnonymous);\nthis.optionMap = Collections.unmodifiableSortedMap(newOptionMap);\nthis.prefixes = Collections.unmodifiableSet(newPrefixes);\n}",
            "method_id": 58
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:canProcess(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/lang/String;)Z",
            "method_body": "public boolean canProcess(final WriteableCommandLine commandLine,\nif (arg == null) {\nif (optionMap.containsKey(arg)) {\nreturn true;\n}",
            "method_id": 59
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 60
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:process(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void process(final WriteableCommandLine commandLine,\nString previous = null;\nwhile (arguments.hasNext()) {\nfinal String arg = (String) arguments.next();\nif (arg == previous) {\nprevious = arg;\nfinal Option opt = (Option) optionMap.get(arg);\nif (opt != null) {\narguments.previous();\nopt.process(commandLine, arguments);\nif (commandLine.looksLikeOption(arg)) {\narguments.previous();\nif (anonymous.isEmpty()) {\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Argument argument = (Argument) i.next();\nif (argument.canProcess(commandLine, arguments)) {\nargument.process(commandLine, arguments);\n}\n} // [END process each command line token\n}",
            "method_id": 61
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(final WriteableCommandLine commandLine)\nint present = 0;\nOption unexpected = null;\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\nboolean validate = option.isRequired() || option instanceof Group;\nif (commandLine.hasOption(option)) {\nif (++present > maximum) {\nvalidate = true;\nif (validate) {\noption.validate(commandLine);\n}\nif (unexpected != null) {\nif (present < minimum) {\nthrow new OptionException(this, ResourceConstants.MISSING_OPTION);\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.validate(commandLine);\n}\n}",
            "method_id": 62
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nappendUsage(buffer, helpSettings, comp, \"|\");\n}",
            "method_id": 63
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;Ljava/lang/String;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal Set helpSettingsCopy = new HashSet(helpSettings);\nfinal boolean optional =\nfinal boolean expanded =\nfinal boolean named =\nfinal boolean arguments = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_ARGUMENT);\nfinal boolean outer = helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_OUTER);\nhelpSettingsCopy.remove(DisplaySetting.DISPLAY_GROUP_OUTER);\nfinal boolean both = named && expanded;\nif (optional) {\nbuffer.append('[');\nif (named) {\nbuffer.append(name);\nif (both) {\nif (expanded) {\nif (!helpSettingsCopy.contains(DisplaySetting.DISPLAY_GROUP_EXPANDED)) {\nchildSettings = new HashSet(helpSettingsCopy);\nchildSettings.remove(DisplaySetting.DISPLAY_OPTIONAL);\nif (comp == null) {\nlist = options;\nfor (final Iterator i = list.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.appendUsage(buffer, childSettings, comp);\nif (i.hasNext()) {\nbuffer.append(separator);\n}\nif (both) {\nif (optional && outer) {\nbuffer.append(']');\nif (arguments) {\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nbuffer.append(' ');\nfinal Option option = (Option) i.next();\noption.appendUsage(buffer, helpSettingsCopy, comp);\n}\nif (optional && !outer) {\n}",
            "method_id": 64
        },
        {
            "method_signature": "org.apache.commons.cli2.option.GroupImpl:defaults(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void defaults(final WriteableCommandLine commandLine) {\nsuper.defaults(commandLine);\nfor (final Iterator i = options.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\nfor (final Iterator i = anonymous.iterator(); i.hasNext();) {\nfinal Option option = (Option) i.next();\noption.defaults(commandLine);\n}\n}",
            "method_id": 65
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:parse([Ljava/lang/String;)Lorg/apache/commons/cli2/CommandLine;",
            "method_body": "public CommandLine parse(final String[] arguments)\nfinal List argumentList = new LinkedList();\nfor (int i = 0; i < arguments.length; i++) {\nfinal String argument = arguments[i];\nargumentList.add(new String(argument));\nfinal WriteableCommandLine commandLine = new WriteableCommandLineImpl(group, argumentList);\ngroup.defaults(commandLine);\nfinal ListIterator iterator = argumentList.listIterator();\nObject previous = null;\nwhile (group.canProcess(commandLine, iterator)) {\nfinal Object next = iterator.next();\niterator.previous();\nif (next == previous) {\nprevious = next;\ngroup.process(commandLine, iterator);\n}\nif (iterator.hasNext()) {\nif (!commandLine.hasOption(helpOption) && !commandLine.hasOption(helpTrigger)) {\ngroup.validate(commandLine);\nreturn commandLine;\n}",
            "method_id": 66
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.Parser:setGroup(Lorg/apache/commons/cli2/Group;)V",
            "method_body": "public void setGroup(final Group group) {\nthis.group = group;\n}",
            "method_id": 67
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.CommandLineImpl:hasOption(Ljava/lang/String;)Z",
            "method_body": "public final boolean hasOption(final String trigger) {\nreturn hasOption(getOption(trigger));\n}",
            "method_id": 68
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.CommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;)Ljava/util/List;",
            "method_body": "public final List getValues(final Option option) {\nreturn getValues(option, Collections.EMPTY_LIST);\n}",
            "method_id": 69
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:<init>(Lorg/apache/commons/cli2/Option;Ljava/util/List;)V",
            "method_body": "public WriteableCommandLineImpl(final Option rootOption,\nfinal List arguments) {\nthis.prefixes = rootOption.getPrefixes();\nthis.normalised = arguments;\n}",
            "method_id": 70
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addOption(Lorg/apache/commons/cli2/Option;)V",
            "method_body": "public void addOption(Option option) {\noptions.add(option);\nnameToOption.put(option.getPreferredName(), option);\nfor (Iterator i = option.getTriggers().iterator(); i.hasNext();) {\nnameToOption.put(i.next(), option);\n}",
            "method_id": 71
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addValue(Lorg/apache/commons/cli2/Option;Ljava/lang/Object;)V",
            "method_body": "public void addValue(final Option option,\nif (option instanceof Argument) {\naddOption(option);\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = new ArrayList();\nvalues.put(option, valueList);\nvalueList.add(value);\n}",
            "method_id": 72
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:hasOption(Lorg/apache/commons/cli2/Option;)Z",
            "method_body": "public boolean hasOption(final Option option) {\nfinal boolean present = options.contains(option);\nreturn present;\n}",
            "method_id": 73
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getOption(Ljava/lang/String;)Lorg/apache/commons/cli2/Option;",
            "method_body": "public Option getOption(final String trigger) {\nreturn (Option) nameToOption.get(trigger);\n}",
            "method_id": 74
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)Ljava/util/List;",
            "method_body": "public List getValues(final Option option,\nList valueList = (List) values.get(option);\nif (defaultValues == null || defaultValues.isEmpty()) {\ndefaultValues = (List) this.defaultValues.get(option);\nif (defaultValues != null && !defaultValues.isEmpty()) {\nreturn valueList == null ? Collections.EMPTY_LIST : valueList;\n}",
            "method_id": 75
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getUndefaultedValues(Lorg/apache/commons/cli2/Option;)Ljava/util/List;",
            "method_body": "public List getUndefaultedValues(Option option) {\nList valueList = (List) values.get(option);\nif (valueList == null) {\nvalueList = Collections.EMPTY_LIST;\nreturn valueList;\n}",
            "method_id": 76
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:looksLikeOption(Ljava/lang/String;)Z",
            "method_body": "public boolean looksLikeOption(final String trigger) {\nfor (final Iterator i = prefixes.iterator(); i.hasNext();) {\nfinal String prefix = (String) i.next();\nif (trigger.startsWith(prefix)) {\nreturn true;\n}\nreturn false;\n}",
            "method_id": 77
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:getOptions()Ljava/util/List;",
            "method_body": "public List getOptions() {\nreturn Collections.unmodifiableList(options);\n}",
            "method_id": 78
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:setDefaultValues(Lorg/apache/commons/cli2/Option;Ljava/util/List;)V",
            "method_body": "public void setDefaultValues(final Option option,\nif (defaults == null) {\ndefaultValues.remove(option);\n}",
            "method_id": 79
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:<init>(Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;ZLorg/apache/commons/cli2/Argument;Lorg/apache/commons/cli2/Group;I)V",
            "method_body": "public Command(final String preferredName,\nsuper(argument, children, description, id, required);\nif ((preferredName == null) || (preferredName.length() < 1)) {\nthis.preferredName = preferredName;\nthis.aliases =\nfinal Set newTriggers = new HashSet();\nnewTriggers.add(preferredName);\nnewTriggers.addAll(this.aliases);\nthis.triggers = Collections.unmodifiableSet(newTriggers);\n}",
            "method_id": 80
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:processParent(Lorg/apache/commons/cli2/WriteableCommandLine;Ljava/util/ListIterator;)V",
            "method_body": "public void processParent(final WriteableCommandLine commandLine,\nfinal String arg = (String) arguments.next();\nif (canProcess(commandLine, arg)) {\ncommandLine.addOption(this);\narguments.set(preferredName);\n}",
            "method_id": 81
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn triggers;\n}",
            "method_id": 82
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:validate(Lorg/apache/commons/cli2/WriteableCommandLine;)V",
            "method_body": "public void validate(WriteableCommandLine commandLine)\nif (isRequired() && !commandLine.hasOption(this)) {\nsuper.validate(commandLine);\n}",
            "method_id": 83
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:appendUsage(Ljava/lang/StringBuffer;Ljava/util/Set;Ljava/util/Comparator;)V",
            "method_body": "public void appendUsage(final StringBuffer buffer,\nfinal boolean optional =\nfinal boolean displayAliases = helpSettings.contains(DisplaySetting.DISPLAY_ALIASES);\nif (optional) {\nbuffer.append(preferredName);\nif (displayAliases && !aliases.isEmpty()) {\nsuper.appendUsage(buffer, helpSettings, comp);\nif (optional) {\n}",
            "method_id": 84
        },
        {
            "method_signature": "org.apache.commons.cli2.option.Command:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn preferredName;\n}",
            "method_id": 85
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addSwitch(Lorg/apache/commons/cli2/Option;Z)V",
            "method_body": "public void addSwitch(final Option option,\naddOption(option);\nif (switches.containsKey(option)) {\nswitches.put(option, value ? Boolean.TRUE : Boolean.FALSE);\n}",
            "method_id": 86
        },
        {
            "method_signature": "org.apache.commons.cli2.commandline.WriteableCommandLineImpl:addProperty(Lorg/apache/commons/cli2/Option;Ljava/lang/String;Ljava/lang/String;)V",
            "method_body": "public void addProperty(final Option option,\nProperties properties = (Properties) optionToProperties.get(option);\nif (properties == null) {\nproperties = new Properties();\noptionToProperties.put(option, properties);\nproperties.setProperty(property, value);\n}",
            "method_id": 87
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:<init>()V",
            "method_body": "public PropertyOption() {\nthis(DEFAULT_OPTION_STRING, DEFAULT_DESCRIPTION, 'D');\n}",
            "method_id": 88
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:<init>(Ljava/lang/String;Ljava/lang/String;I)V",
            "method_body": "public PropertyOption(final String optionString,\nsuper(id, false);\nthis.optionString = optionString;\nthis.description = description;\nthis.prefixes = Collections.singleton(optionString);\n}",
            "method_id": 89
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:<clinit>()V",
            "method_body": "public static final String DEFAULT_OPTION_STRING = \"-D\";\npublic static final PropertyOption INSTANCE = new PropertyOption();\nthis(DEFAULT_OPTION_STRING, DEFAULT_DESCRIPTION, 'D');\n}",
            "method_id": 90
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:getPrefixes()Ljava/util/Set;",
            "method_body": "public Set getPrefixes() {\nreturn prefixes;\n}",
            "method_id": 91
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:getTriggers()Ljava/util/Set;",
            "method_body": "public Set getTriggers() {\nreturn Collections.singleton(optionString);\n}",
            "method_id": 92
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:getPreferredName()Ljava/lang/String;",
            "method_body": "public String getPreferredName() {\nreturn optionString;\n}",
            "method_id": 93
        },
        {
            "method_signature": "org.apache.commons.cli2.option.PropertyOption:getDescription()Ljava/lang/String;",
            "method_body": "public String getDescription() {\nreturn description;\n}",
            "method_id": 94
        }
    ]
}