{
    "project_name": "Codec",
    "bugs": {
        "17": {
            "0": {
                "method_ids": [
                    0,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.StringUtils:newStringIso8859_1([B)Ljava/lang/String;",
                    "org.apache.commons.codec.binary.StringUtils:newString([BLjava/nio/charset/Charset;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.StringUtils:newStringIso8859_1([B)Ljava/lang/String;"
                ]
            }
        },
        "10": {
            "0": {
                "method_ids": [
                    0,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Caverphone:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;"
                ]
            }
        },
        "18": {
            "0": {
                "method_ids": [
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.StringUtils:equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z",
                    "org.apache.commons.codec.binary.CharSequenceUtils:regionMatches(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.StringUtils:equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.CharSequenceUtils:regionMatches(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z",
                    "org.apache.commons.codec.binary.StringUtils:equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.StringUtils:equals(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z"
                ]
            }
        },
        "11": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    6,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.codec.net.Utils:digit16(B)I",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decode([B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:<clinit>()V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    1,
                    2,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B",
                    "org.apache.commons.codec.net.Utils:digit16(B)I",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decode(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:<clinit>()V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B"
                ]
            },
            "4": {
                "method_ids": [
                    0,
                    6,
                    1,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode([B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:<clinit>()V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B"
                ]
            },
            "2": {
                "method_ids": [
                    0,
                    5,
                    1,
                    2,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode([B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.binary.StringUtils:newStringUsAscii([B)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:<clinit>()V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B"
                ]
            },
            "3": {
                "method_ids": [
                    0,
                    6,
                    1,
                    3,
                    2
                ],
                "method_signatures": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode([B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.net.QuotedPrintableCodec:<clinit>()V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(ILjava/io/ByteArrayOutputStream;)V",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:encodeQuotedPrintable(Ljava/util/BitSet;[B)[B",
                    "org.apache.commons.codec.net.QuotedPrintableCodec:decodeQuotedPrintable([B)[B"
                ]
            }
        },
        "16": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base32:<init>(I[BZB)V",
                    "org.apache.commons.codec.binary.Base32:<init>(ZB)V",
                    "org.apache.commons.codec.binary.Base32:isInAlphabet(B)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base32:<clinit>()V"
                ]
            }
        },
        "2": {
            "0": {
                "method_ids": [
                    0,
                    2,
                    6,
                    3,
                    1,
                    7,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I",
                    "org.apache.commons.codec.binary.Base64InputStream:read()I",
                    "org.apache.commons.codec.binary.Base64:readResults([BII)I",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64InputStream:<init>(Ljava/io/InputStream;ZI[B)V",
                    "org.apache.commons.codec.binary.Base64:hasData()Z",
                    "org.apache.commons.codec.binary.Base64:avail()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:encode([BII)V"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    2,
                    4,
                    3,
                    1,
                    11
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64OutputStream:flush(Z)V",
                    "org.apache.commons.codec.binary.Base64OutputStream:close()V",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64OutputStream:flush()V",
                    "org.apache.commons.codec.binary.Base64OutputStream:<init>(Ljava/io/OutputStream;ZI[B)V",
                    "org.apache.commons.codec.binary.Base64:avail()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:encode([BII)V"
                ]
            }
        },
        "5": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    2,
                    9,
                    12,
                    7,
                    3,
                    13
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64InputStream:<init>(Ljava/io/InputStream;Z)V",
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I",
                    "org.apache.commons.codec.binary.Base64:decode([BII)V",
                    "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                    "org.apache.commons.codec.binary.StringUtils:getBytesUnchecked(Ljava/lang/String;Ljava/lang/String;)[B",
                    "org.apache.commons.codec.binary.Base64:hasData()Z",
                    "org.apache.commons.codec.binary.Base64InputStream:<init>(Ljava/io/InputStream;)V",
                    "org.apache.commons.codec.binary.StringUtils:getBytesUtf8(Ljava/lang/String;)[B"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:decode([BII)V"
                ]
            },
            "1": {
                "method_ids": [
                    3,
                    1,
                    0,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64OutputStream:close()V",
                    "org.apache.commons.codec.binary.Base64OutputStream:write([BII)V",
                    "org.apache.commons.codec.binary.Base64OutputStream:flush(Z)V",
                    "org.apache.commons.codec.binary.Base64:decode([BII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:decode([BII)V"
                ]
            }
        },
        "4": {
            "0": {
                "method_ids": [
                    2,
                    0,
                    1,
                    3,
                    4,
                    5,
                    8
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64:encode([B)[B",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64:encode(Ljava/lang/Object;)Ljava/lang/Object;",
                    "org.apache.commons.codec.binary.Base64:getEncodeLength([BI[B)J",
                    "org.apache.commons.codec.binary.Base64:reset()V",
                    "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                    "org.apache.commons.codec.binary.Base64:containsBase64Byte([B)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:<init>()V"
                ]
            },
            "1": {
                "method_ids": [
                    1,
                    0,
                    2,
                    4,
                    3
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64:encode([B)[B",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64:getEncodeLength([BI[B)J",
                    "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                    "org.apache.commons.codec.binary.Base64:reset()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:<init>()V"
                ]
            }
        },
        "3": {
            "0": {
                "method_ids": [
                    1,
                    0,
                    2,
                    3,
                    14,
                    33,
                    16
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.DoubleMetaphone:handleG(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I",
                    "org.apache.commons.codec.language.DoubleMetaphone:doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
                    "org.apache.commons.codec.language.DoubleMetaphone:handleC(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;I)I",
                    "org.apache.commons.codec.language.DoubleMetaphone:handleS(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I",
                    "org.apache.commons.codec.language.DoubleMetaphone:isSilentStart(Ljava/lang/String;)Z",
                    "org.apache.commons.codec.language.DoubleMetaphone:isSlavoGermanic(Ljava/lang/String;)Z",
                    "org.apache.commons.codec.language.DoubleMetaphone:cleanInput(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.DoubleMetaphone:handleG(Ljava/lang/String;Lorg/apache/commons/codec/language/DoubleMetaphone$DoubleMetaphoneResult;IZ)I"
                ]
            }
        },
        "13": {
            "0": {
                "method_ids": [
                    4,
                    1,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.DoubleMetaphone:isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z",
                    "org.apache.commons.codec.language.DoubleMetaphone:doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
                    "org.apache.commons.codec.language.DoubleMetaphone:cleanInput(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.DoubleMetaphone:isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    1,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.DoubleMetaphone:cleanInput(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.DoubleMetaphone:doubleMetaphone(Ljava/lang/String;Z)Ljava/lang/String;",
                    "org.apache.commons.codec.language.DoubleMetaphone:isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.DoubleMetaphone:isDoubleMetaphoneEqual(Ljava/lang/String;Ljava/lang/String;Z)Z"
                ]
            }
        },
        "14": {
            "0": {
                "method_ids": [
                    3,
                    9,
                    4,
                    6,
                    22
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.bm.PhoneticEngine:encode(Ljava/lang/String;Lorg/apache/commons/codec/language/bm/Languages$LanguageSet;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.bm.PhoneticEngine:applyFinalRules(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;",
                    "org.apache.commons.codec.language.bm.Rule:patternAndContextMatches(Ljava/lang/CharSequence;I)Z",
                    "org.apache.commons.codec.language.bm.Rule:parsePhonemeExpr(Ljava/lang/String;)Lorg/apache/commons/codec/language/bm/Rule$PhonemeExpr;",
                    "org.apache.commons.codec.language.bm.Rule:getInstanceMap(Lorg/apache/commons/codec/language/bm/NameType;Lorg/apache/commons/codec/language/bm/RuleType;Ljava/lang/String;)Ljava/util/Map;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.bm.Lang:<clinit>()V",
                    "org.apache.commons.codec.language.bm.PhoneticEngine:applyFinalRules(Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;Ljava/util/Map;)Lorg/apache/commons/codec/language/bm/PhoneticEngine$PhonemeBuilder;"
                ]
            }
        },
        "15": {
            "0": {
                "method_ids": [
                    0,
                    1,
                    3,
                    2,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Soundex:soundex(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Soundex:getMappingCode(Ljava/lang/String;I)C",
                    "org.apache.commons.codec.language.Soundex:map(C)C",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Soundex:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Soundex:getMappingCode(Ljava/lang/String;I)C"
                ]
            }
        },
        "8": {
            "0": {
                "method_ids": [
                    0,
                    5,
                    2,
                    1,
                    12
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64:resizeBuffer()V",
                    "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                    "org.apache.commons.codec.binary.Base64:avail()I"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:setInitialBuffer([BII)V",
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I"
                ]
            }
        },
        "6": {
            "0": {
                "method_ids": [
                    0,
                    2,
                    1,
                    4,
                    14,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I",
                    "org.apache.commons.codec.binary.Base64:decode([BII)V",
                    "org.apache.commons.codec.binary.Base64InputStream:<init>(Ljava/io/InputStream;Z)V",
                    "org.apache.commons.codec.binary.Base64:readResults([BII)I",
                    "org.apache.commons.codec.binary.Base64:avail()I",
                    "org.apache.commons.codec.binary.Base64:hasData()Z"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64InputStream:read([BII)I"
                ]
            }
        },
        "1": {
            "0": {
                "method_ids": [
                    0,
                    2,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:encode(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ]
            },
            "1": {
                "method_ids": [
                    2,
                    4
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ]
            },
            "4": {
                "method_ids": [
                    0,
                    2,
                    1
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Caverphone:encode(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Caverphone:<init>()V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ]
            },
            "2": {
                "method_ids": [
                    2,
                    1,
                    4,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.Soundex:map(C)C",
                    "org.apache.commons.codec.language.Soundex:soundex(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Soundex:getMappingCode(Ljava/lang/String;I)C",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ]
            },
            "3": {
                "method_ids": [
                    0,
                    1,
                    4,
                    6
                ],
                "method_signatures": [
                    "org.apache.commons.codec.language.RefinedSoundex:soundex(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.RefinedSoundex:getMappingCode(C)C",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.RefinedSoundex:encode(Ljava/lang/String;)Ljava/lang/String;"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.language.Caverphone:caverphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.Metaphone:metaphone(Ljava/lang/String;)Ljava/lang/String;",
                    "org.apache.commons.codec.language.SoundexUtils:clean(Ljava/lang/String;)Ljava/lang/String;"
                ]
            }
        },
        "7": {
            "0": {
                "method_ids": [
                    4,
                    8,
                    1,
                    3,
                    7,
                    17,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64:encode([B)[B",
                    "org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;",
                    "org.apache.commons.codec.binary.Base64:encodeToString([B)Ljava/lang/String;",
                    "org.apache.commons.codec.binary.Base64:getEncodeLength([BI[B)J",
                    "org.apache.commons.codec.binary.Base64:reset()V",
                    "org.apache.commons.codec.binary.Base64:containsBase64Byte([B)Z",
                    "org.apache.commons.codec.binary.Hex:decodeHex([C)[B"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;"
                ]
            },
            "1": {
                "method_ids": [
                    0,
                    3,
                    2,
                    1,
                    5,
                    16
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64:encode([BII)V",
                    "org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B",
                    "org.apache.commons.codec.binary.Base64:encode([B)[B",
                    "org.apache.commons.codec.binary.Base64:getEncodeLength([BI[B)J",
                    "org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;",
                    "org.apache.commons.codec.binary.StringUtils:getBytesUtf8(Ljava/lang/String;)[B"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:encodeBase64String([B)Ljava/lang/String;"
                ]
            }
        },
        "9": {
            "0": {
                "method_ids": [
                    4,
                    1,
                    2,
                    0
                ],
                "method_signatures": [
                    "org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B",
                    "org.apache.commons.codec.binary.Base64:getEncodeLength([BI[B)J",
                    "org.apache.commons.codec.binary.Base64:encode([B)[B",
                    "org.apache.commons.codec.binary.Base64:encode([BII)V"
                ],
                "d4j_groundtruth": [
                    "org.apache.commons.codec.binary.Base64:encodeBase64([BZZI)[B"
                ]
            }
        }
    }
}